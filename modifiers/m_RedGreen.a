
	!src "godotlib.lib"
	*= $c000
	!ct pet
;	!sl "labels.txt"

; ------------------------------------------------ 
;
; mod.RedGreen
;
; Module to turn a greyscale image into red or green scaled
;
; 1.00, 22.04.21, first release
; 1.01, 19.08.21, added CYA option
;
; ------------------------------------------------ 


; ------------------------------------------------ Equations

	pport	= $01

	adcnt	= $30
	cbytes	= $31		; /$32
	colmk	= $33
	src	= $34		; /$35
	which	= $36

	sprptr	= $07f8
	spr255	= $3fc0

	spr2x	= $d004
	spr2y	= $d005
	msbx	= $d010
	spren	= $d015
	sprxe	= $d01d
	border	= $d020
	sprcol2	= $d029

; ------------------------------------------------ Header

	jmp start
	!by $20
	!wo 0
	!wo modend
	!wo 0
	!pet "RED, GRN or CYA "
	!pet "1.01"
	!pet "19.08.21"
	!pet "A.Dettke        "

; ------------------------------------------------ Main

start	lda gd_modswitch
	pha 
	lda sc_screenvek	; save position of requester
	pha 
	lda sc_screenvek+1
	pha 

	jsr chkmulti	; check if consisting of double pixels
	lda failed
	bmi ++

	ldx #<rgclst	; display requester
	ldy #>rgclst
	bne +
++	ldx #<faillst	; display alert
	ldy #>faillst
+	jsr gd_screen

	jsr gd_eloop	; wait

	pla 
	sta sc_screenvek+1	; restore old requester
	pla 
	sta sc_screenvek
	pla 
	sta gd_modswitch

; ------------------------------------------------ Event: Leave

evcancel	sec 
	rts 

; ------------------------------------------------ Events: Red/Green

evcya	lda #1
	bne +

evred	lda #0
	beq +

evgrn	lda #$ff
+	sta which

	jsr init		; returns .a=0

	tay
er0	lda (src),y	; exchange colors
	and #15
	tax
	bit which
	bmi +
	lda which
	bne +++
	lda tabred,x
	jmp ++
+++	lda tabcya,x
	jmp ++
+	lda tabgrn,x
++	sta (src),y
	iny
	bne er0
	jsr adinc
	inc src+1
	lda src+1
	cmp #>sy_bigbuffer	; until end of 4bit
	bcc er0

; ------------------------------------------------ OddSwap

oddswap	jsr init
	tay		; .a=0

-	tya 
	and #4		; choose every other raster line..
	beq +

	lda (src),y	; ...and exchange nibbles there
	lsr
	lsr
	lsr
	lsr
	sta colmk
	lda (src),y
	asl
	asl
	asl
	asl
	ora colmk
	sta (src),y

+	iny 
	bne -

	jsr adinc
	inc src+1
	lda src+1
	cmp #>sy_bigbuffer	; until end of 4bit
	bcc -
	jsr clearad
	sec
	rts

; ------------------------------------------------ Check if Multi

chkmulti	jsr init		; activate activity bar

	tay		; clear counter (.a=0)
	sta cbytes
	sta cbytes+1
	sta failed

hl2	lda (src),y
	tax
	and #15
	sta colmk		; upper nibble equal to lower?
	txa 
	lsr 
	lsr 
	lsr 
	lsr 
	eor colmk
	bne sk2
	inc cbytes	; yes, count
	bne sk2
	inc cbytes+1
sk2	iny 
	bne hl2
	jsr adinc
	inc src+1
	lda src+1
	cmp #>sy_bigbuffer
	bcc hl2

	jsr clearad	; clear activity bar
	lda cbytes
	bne fail
	lda cbytes+1
	cmp #$7d
	bne fail
	rts

fail	ldy #2

; ----------------------------------------------------- Blink the Border

graphon	lda border	; save border color
	pha
	sty border	; set new color (in .y, e.g. "2" for red)
	ldx #$40
	jsr gd_dl2	; delay
	dex
	stx failed
	pla
	sta border	; reset old border color
stay	clc
	rts

; ------------------------------------------------ Init Activity

init	jsr initad
	jsr setadcnt
	lda #<sy_4bit
	ldx #>sy_4bit
	sta src
	stx src+1
	rts

; ------------------------------------------------ Activity

adinc	dec adcnt		; advance after adcnt passes
	bne +
	inc spr2y
	inc spr2y+2
setadcnt	lda #3		; Startzähler: 3
	sta adcnt
+	rts

; ------------------------------------------------ Abschluss Activity

clearad	lda spren		; Wanderbalken aus
	and #$f3
	sta spren
	lda msbx
	and #$f3
	sta msbx
	lda #$ff		; Grafik verändert,
	sta gr_redisp	; also Flag für System setzen
	clc 		; fertig
	rts 

; ------------------------------------------------ Init Activity

initad	ldy #60		; Spriteblock 255 vorbereiten
	lda #0
-	sta spr255+3,y
	dey 
	bpl -
	sty spr255	; dünner Strich
	sty spr255+1
	sty spr255+2
	lda #15		; Farbe hellgrau
	sta sprcol2
	sta sprcol2+1
	lda sprxe		; doppelt breit
	ora #$0c
	sta sprxe

	lda msbx		; x über 255
	ora #$0c
	sta msbx
	lda #8		; x-Ordinate: 8 (plus 256)
	sta spr2x
	lda #$20
	sta spr2x+2
	lda #$92		; y-Ordinate: 146
	sta spr2y		; (im Image Information Fenster)
	sta spr2y+2

	sty sprptr+2	; Sprite 255
	sty sprptr+3
	lda spren
	ora #$0c		; Activity-Balken aktivieren
	sta spren
	rts

; ------------------------------------------------ 

failed	!by 0

tabred	!by $00,$01,$03,$12,$14,$34,$22,$24
	!by $44,$39,$54,$64,$49,$b9,$6d,$ff

tabgrn	!by $00,$31,$03,$33,$08,$38,$3a,$7a	; 7a=4a?
	!by $5a,$6a,$8a,$7e,$aa,$de,$ca,$ff

tabcya	!by $00,$31,$41,$33,$18,$38,$4a,$6a
	!by $5a,$8a,$6c,$bc,$dc,$ee,$fe,$ff

; ------------------------------------------------ Screenlists

rgclst	!by 0
	!by 9,14,12,10,$91
	!wo 0
	!scr "Color",0
	!by 12,14,12,3,$ca
	!wo evred
	!scr "Red",0
	!by 14,14,6,3,$40
	!wo evcya
	!by 14,19,7,3,$40
	!wo evgrn
	!by 14,14,12,3,$8b
	!wo stay
	!scr "Cyan",$65,"Green",0
	!by 16,14,12,3,$cb
	!wo evcancel
	!scr "Leave",0
	!by $c0,10,15,8
	!scr "Gradient",0
	!by $80

faillst	!by 0
	!by 8,14,12,8,$81
	!wo 0
	!scr "Unsuitable",0
	!by 14,14,12,3,$c9
	!wo evcancel
	!scr "Leave",0
	!by $c0,10,14,10
	!scr "Data  must",0
	!by $c0,11,14,10
	!scr "consist of",0
	!by $c0,12,14,10
	!scr "Dbl Pixels",0
	!by $80

; ------------------------------------------------ 

modend	!eof
