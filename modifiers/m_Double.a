	!src "godotlib.lib"
	*= $c000
	!ct pet
;	!sl "labels.txt"

; --------------------------------------
;
; mod.Double
;
;   1.00, 10.08.04, first release
;   1.01, 24.08.04, added: preview
;   1.02, 20.03.18, added: scale any clip (using ClipWorks/LastClip)
;   1.03, 25.04.19, added correct image information
; 
; -------------------------------------- 

; -------------------------------------- Equates

	bbuf		= $30
	dstcnt		= $30
	dst		= $32
	adcnt		= $34
	src		= $35
	linenr		= $38
	colnr		= $39
	blcnt		= $3b
	sbak		= $3c
	sum		= $3d
	ybufstart		= $3f
	bufend		= $40
	null		= $41
	which		= $42
	tab		= $43

	sprptr		= $07f8
	spr255		= $3fc0
	
	ybuf0		= $bf00
	ytab0		= $c500
	xtab0		= $c500
	ybuf1		= $c600
	xbuf0		= $c700
	xbuf1		= $c900
	
	sprx2		= $d004
	spry2		= $d005
	spren		= $d015
	sprxe		= $d01d
	border		= $d020
	sprcol2		= $d029

; -------------------------------------- Header

	jmp start
	!by $20
	!by 0
	!by 0
	!wo modend
	!by 0
	!by 0
	!tx "Double Quadrant "
	!tx "1.03"
	!tx "25.04.19"
	!tx "W.Kling/A.Dettke"

; -------------------------------------- Main 

start	lda gd_modswitch	; (v1.01)
	pha
	ldx #<(doublelst)	; display requester
	ldy #>(doublelst)
	jsr gd_screen
	jsr gd_eloop	; wait for clicks
	pla
	sta gd_modswitch
	jsr setmode	; ### 1.03

; --------------------------------------- Event: Exit

evexit	sec
	rts

; --------------------------------------- Warn if doesn't fit

warn	ldy #2
	jsr graphon
	clc
	rts

; --------------------------------------- Event: Choose Area

evarea1	ldx #0
	beq areago

evarea2	ldx #1
	bne areago

evarea3	ldx #2
	bne areago

evarea4	ldx #3
	bne areago

evarea5	ldx #4		; ### 1.03:
	lda sc_lastclpzl
	cmp #13
	bcs warn
	jsr mulply8
	sta frow,x
	lda sc_lastclpsp
	cmp #21
	bcs warn
	jsr mulply8
	sta fcolumn,x

; -------------------------------------- Perform Double

areago	lda frow,x
	sta row
	lda fcolumn,x
	sta column
	jsr vres
	jsr hres
	jmp clearad

; -------------------------------------- vertically

vres	ldx type

vstart0	lda row		; row 0 = 1./3. quadrant
	sta ybufstart	; (row 100 = 2./4. quadrant)
	
	lda #100		; height 12.5 = 100 pixels (fixed)
	clc
	adc ybufstart
	sta bufend
	inc bufend
	
	lda #0
	sta sum
	sta sum+1
	sta sbak
	
	ldy ybufstart
vtab1	lda sum
	clc
	adc ystep
	sta sum
	lda sum+1
	sta sbak
	adc ystep+1
	sta sum+1
	sec
	sbc sbak
	sta ytab0,y
	iny
	cpy bufend
	bne vtab1

	lda #8
	jsr initad
	
	ldy #0
	tya
vclrlp	sta ybuf1,y
	iny
	bne vclrlp

	lda #0
	sta colnr
	sta colnr+1

vloop00	lda colnr+1
	lsr
	sta src+1
	lda colnr
	ror
	bcs odd0
	ldx #$0f
	!by $2c
odd0	ldx #$f0
	stx which
	
	tax
	and #3
	sta src
	txa
	and #$fc
	asl
	rol src+1
	asl
	rol src+1
	asl
	rol src+1
	ora src
	sta src
	lda src+1
	ora #$40
	sta src+1
	
	ldx #0
	stx null
	
vloop0	ldy #0
vloop1	lda (src),y
	bit which
	bvs odd1
	lsr
	lsr
	lsr
	lsr
odd1	and #$0f
	sta ybuf0,x
	beq nuls0
	sta null
nuls0	inx
	iny
	iny
	iny
	iny
	cpy #32
	bcc vloop1
	
	lda src+1
	clc
	adc #$05
	sta src+1
	cmp #$bd
	bcc vloop0
	
	lda null
	beq nextcol
	
	ldx #0
	ldy ybufstart
vsql	lda ytab0,y
	sta sum
	lda ybuf0,y
vsql1	sta ybuf1,x
	inx
	dec sum
	bne vsql1
	iny
	cpy bufend
	bne vsql
	
	lda colnr+1
	lsr
	sta dst+1
	lda colnr
	ror
	bcs odd2
	ldx #$0f
	!by $2c
odd2	ldx #$f0
	stx which
	
	tax
	and #3
	sta dst
	txa
	and #$fc
	asl
	rol dst+1
	asl
	rol dst+1
	asl
	rol dst+1
	ora dst
	sta dst
	lda dst+1
	ora #$40
	sta dst+1
	
	ldx #0
vloop2	ldy #0
vloop3	lda ybuf1,x
	bit which
	bvs odd3
	asl
	asl
	asl
	asl
odd3	sta bbuf
	lda (dst),y
	and which
	ora bbuf
	sta (dst),y
	inx
	iny
	iny
	iny
	iny
	cpy #32
	bcc vloop3
	
	lda dst+1
	clc
	adc #$05
	sta dst+1
	cmp #$bd
	bcc vloop2

nextcol	inc colnr
	bne vskip0
	inc colnr+1
vskip0	lda colnr
	cmp #$40
	bne vskip1
	lda colnr+1
	bne vok
	
vskip1	dec adcnt
	bne vadskp
	inc spry2
	inc spry2+2
	lda #8
	sta adcnt
vadskp	jmp vloop00
vok	rts

; -------------------------------------- horizontally

hres	ldx type

hstart0	lda #0
	sta sum
	sta sum+1
	sta sbak
	sta dstcnt+1

	lda #>(xtab0)
	sta tabstart+1
	lda #>(xbuf0)
	sta bufstart+1
	
	lda column	; column 0 = 1./3. quadrant
	sta tabstart	; (column 160 = 2./4. quadrant)
	sta bufstart
	
xskip0	lda #160		; width 20 = 160 pixels (fixed)
	sta dstcnt

xl01	lda tabstart
	ldx tabstart+1
	sta tab
	stx tab+1
	
	ldy #0
	lda dstcnt+1
	beq xloop1
	lda dstcnt
	beq xloop10
	
xloop0	lda sum
	clc
	adc xstep
	sta sum
	lda sum+1
	sta sbak
	adc xstep+1
	sta sum+1
	sec
	sbc sbak
	sta (tab),y
	iny
	bne xloop0
	inc tab+1

xloop1	inc dstcnt
xloop10	lda sum
	clc
	adc xstep
	sta sum
	lda sum+1
	sta sbak
	adc xstep+1
	sta sum+1
	sec
	sbc sbak
	sta (tab),y
	iny
	cpy dstcnt
	bne xloop10
	lda dstcnt
	beq xloop11
	dec dstcnt
	
xloop11	lda #5
	jsr initad
	
	ldy #0
	tya
hclrlp	sta xbuf1,y
	sta xbuf1+256,y
	iny
	bne hclrlp
	
	lda #0
	sta linenr
hloop00	lda linenr
	pha
	lsr
	lsr
	lsr
	tax
	pla
	and #$07
	asl
	asl
	sta dst
	lda line8,x
	sta dst+1
	
	lda #<(xbuf0)
	ldx #>(xbuf0)
	sta src
	stx src+1
	
	ldx #0
	stx null
	lda #40
	sta blcnt
hloop0	ldy #0
hloop1	lda (dst),y
	beq nuls1
	sta null
nuls1	pha
	lsr
	lsr
	lsr
	lsr
	sta (src,x)
	inc src
	bne hskip0
	inc src+1
hskip0	pla
	and #$0f
	sta (src,x)
	inc src
	bne hskip1
	inc src+1
hskip1	iny
	cpy #4
	bne hloop1
	
	lda dst
	clc
	adc #32
	sta dst
	bcc hskip2
	inc dst+1
hskip2	dec blcnt
	bne hloop0
	
	lda null
	bne xdoit
	jmp nextline
	
xdoit	lda #<(xbuf1)
	ldx #>(xbuf1)
	sta dst
	stx dst+1

	lda bufstart
	ldx bufstart+1
	sta src
	stx src+1
	
	lda tabstart
	ldx tabstart+1
	sta tab
	stx tab+1
	
	ldx #0
	ldy #0
	lda dstcnt+1
	beq xloop3
	lda dstcnt
	beq xloop30

xloop2	lda (tab),y
	sta sum
	lda (src),y
xl2	sta (dst,x)
	inc dst
	bne xl1
	inc dst+1
xl1	dec sum
	bne xl2
	iny
	bne xloop2
	inc tab+1
	inc src+1

xloop3	inc dstcnt
xloop30	lda (tab),y
	sta sum
	lda (src),y
xl4	sta (dst,x)
	inc dst
	bne xl3
	inc dst+1
xl3	dec sum
	bne xl4
 	iny
	cpy dstcnt
	bne xloop30
	lda dstcnt
	beq xloop12
	dec dstcnt
	
xloop12	lda linenr
	pha
	lsr
	lsr
	lsr
	tax
	pla
	and #$07
	asl
	asl
	sta dst
	lda line8,x
	sta dst+1
	
	lda #<(xbuf1)
	ldx #>(xbuf1)
	sta src
	stx src+1
	ldx #0
	lda #40
	sta blcnt
hloop2	ldy #0
hloop3	lda (src,x)
	asl
	asl
	asl
	asl
	inc src
	bne hskip3
	inc src+1
hskip3	ora (src,x)
	inc src
	bne hskip4
	inc src+1
hskip4	sta (dst),y
	iny
	cpy #4
	bne hloop3
	
	lda dst
	clc
	adc #32
	sta dst
	bcc hskip5
	inc dst+1
hskip5	dec blcnt
	bne hloop2

nextline	inc linenr
	lda linenr
	cmp #200
	beq hok
	
	dec adcnt
	bne adskp
	inc spry2
	inc spry2+2
	lda #5
	sta adcnt
adskp	jmp hloop00
hok	rts

; ---------------------------------------- Blink the Border

graphon	lda border
	pha
	sty border
	ldx #$40
	jsr gd_dl2
	pla
	sta border
	stx sy_tbuffer
stay	clc
	rts

; --------------------------------------- Multiply by 8

mulply8	asl
	asl
	asl
	rts

; --------------------------------------- 

modetx	!scr "160x100@"

line8	!by $40, $45, $4a, $4f, $54
	!by $59, $5e, $63, $68, $6d
	!by $72, $77, $7c, $81, $86
	!by $8b, $90, $95, $9a, $9f
	!by $a4, $a9, $ae, $b3, $b8

ystep	!by 0, 2
xstep	!by 0, 2
tabstart	!by 0, 0
bufstart	!by 0, 0
type	!by 0
frow	!by 0,0,100,100,0
fcolumn	!by 0,160,0,160,0
row	!by 0
column	!by 0

; ------------------------------------------------ 

setmode	ldx #<ls_imode	; ### 1.03
	ldy #>ls_imode
	stx sc_texttab
	sty sc_texttab+1
	ldx #0
	ldy #0
si4	lda modetx,x
	beq si5
	sta (sc_texttab),y
	inx
	iny
	bne si4
si5	rts

; --------------------------------------- 

clearad	lda spren
	and #$f3
	sta spren
	lda spritehi
	and #$f3
	sta spritehi
	rts

initad	sta adcnt
	ldy #60
	lda #0
adl0	sta spr255+3,y
	dey
	bpl adl0
	sty spr255
	sty spr255+1
	sty spr255+2
	sty gr_redisp
	lda #15
	sta sprcol2
	sta sprcol2+1
	lda sprxe
	ora #$0c
	sta sprxe
	lda spritehi
	ora #$0c
	sta spritehi
	lda #8
	sta sprx2
	lda #32
	sta spry2+1
	
	lda #146
	sta spry2
	sta spry2+2
	sty sprptr+2
	sty sprptr+3
	lda spren
	ora #$0c
	sta spren
	rts

; --------------------------------------- Screenlist 

doublelst	!by 0
	!by 3,14,12,17,$81,0,0
	!scr "Double@"
	!by 8,15,10,9,$01,0,0
	!by 8,15,5,3,$c4
	!wo evarea1
	!scr " 1 @"
	!by 8,20,5,3,$c6
	!wo evarea2
	!scr " 2 @"
	!by 11,15,5,3,$c8
	!wo evarea3
	!scr " 3 @"
	!by 11,20,5,3,$cf
	!wo evarea4
	!scr " 4 @"
	!by 14,15,10,3,$c9
	!wo evarea5
	!scr "LastClip@"
	!by 17,14,12,3,$c9
	!wo evexit
	!scr "  Cancel  @"
	!by 11,29,11,7,$4d
	!wo ev_prviu

	!by $c0,5,17,5
	!scr "Area:@"
	!by $80

modend	!eof
