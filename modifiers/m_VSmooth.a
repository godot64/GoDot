
	!src "godotlib.lib"
	*= $c000
	!ct pet
;	!sl "labels.txt"

; --------------------------------------
;
; mod.VSmooth
;
; Color:   0.99, 15.11.92, first release
; Gray :   0.99, 14.11.92, first release
; both :   1.00, 05.07.17, combined the two
;          1.01, 07.01.19, changed some colors in coltab
;          1.02, 10.02.19, got rid of colored bar on first rasterline
; 
; -------------------------------------- 

; -------------------------------------- Equates

	adcnt		= $34
	src		= $35	; /$36
	dst		= $37	; /$38
	cnt320		= $39	; /$3a
	lastnib		= $3f
	mask		= $42

	wkbuf		= $bd00
	smbuf		= $cc00
	spr255		= $3fc0
	y2		= $d005
	spren		= $d015

; -------------------------------------- Header

	JMP start
	!by $20
	!by 0
	!by 0
	!wo modend
	!wo 0
	!pet "Vertical Smooth "
	!pet "1.02"
	!pet "10.02.19"
	!pet "W.Kling         "
addtx	!pet "VSmooth +coltab "
	!pet "VSmooth gray    "
	!by 0

; -------------------------------------- Main

start	ldx #<smlst
	ldy #>smlst
	jmp gd_xmloop

; -------------------------------------- Event: Gray

evgray	lda #$ff
	!by $2c

; -------------------------------------- Event: Color

evcolor	lda #$00
	sta mode

	JSR vsmooth
	JSR clearad
	LDA #$FF
	STA gr_redisp

; -------------------------------------- Event: Cancel

evcan	sec
	rts

; -------------------------------------- Apply values

vsmooth	LDA #$08		; set adcnt value
	JSR initad

	LDY #$00		; clear smooth-buffer
	TYA
sm0	STA smbuf,Y
	INY
	BNE sm0

	LDA #$00
	STA cnt320
	STA cnt320+1
	
vloop	LDA cnt320+1	; which pixel column?
	lsr
	STA src+1
	LDA cnt320	; even/odd?
	ror
	BCS sm1
	LDX #$0f		; right
	!by $2c
sm1	LDX #$f0		; left
	STX mask
	TAX		; compute the according...
	AND #$03
	STA src
	TXA
	AND #$FC
	asl
	ROL src+1
	asl
	ROL src+1
	asl
	ROL src+1
	ORA src
	STA src
	LDA src+1
	ORA #$40		; ...4Bit address
	STA src+1
	
	LDX #$00		; index into workbuffer
bloop	LDY #$00		; compute 1 blockline

tloop	LDA (src),Y	; compute 1 tile
	BIT mask
	BVS sm2
	lsr
	lsr
	lsr
	lsr
sm2	AND #$0F
	STA wkbuf,x	; fill work buffer
	INX
	INY
	INY
	INY
	INY
	CPY #$20
	BCC tloop
	
	LDA src+1		; next blockline (+ $500)
	CLC
	ADC #$05
	STA src+1
	CMP #$BD		; all through?
	BCC bloop

	lda mode		; color or gray?
	bmi gray

; -------------------------------------- 

color	ldy wkbuf		; color: now smooth...
	sty lastnib
	ldy #0
sm3	LDA wkbuf,Y
	TAX
	asl
	asl
	asl
	asl
	ORA lastnib
	STX lastnib
	TAX
	LDA coltab,X
	AND #$0F
	STA smbuf,Y
	INY
	CPY #200
	BNE sm3
	beq continue
	
; -------------------------------------- 

gray	ldy wkbuf		; gray: now smooth...
	sty lastnib
	ldy #0
sm7	lda wkbuf,y
	ldx lastnib	; .x+.a/2
	sta lastnib
	txa 
	sec 
	adc lastnib
	lsr
	sta smbuf,y
	iny 
	cpy #200
	bne sm7

; -------------------------------------- 

continue	LDA cnt320+1
	lsr
	STA dst+1
	LDA cnt320
	ror
	BCS sm4
	LDX #$0F
	!by $2c
sm4	LDX #$F0
	STX mask
	TAX
	AND #$03
	STA dst
	TXA
	AND #$FC
	asl
	ROL dst+1
	asl
	ROL dst+1
	asl
	ROL dst+1
	ORA dst
	STA dst
	LDA dst+1
	ORA #$40		; 4Bit address
	STA dst+1
	
	LDX #$00		; write back smoothed values
bloop1	LDY #$00
tloop1	LDA smbuf,X
	BIT mask
	BVS sm5
	asl
	asl
	asl
	asl
sm5	STA lastnib
	LDA (dst),Y
	AND mask
	ORA lastnib
	STA (dst),Y
	INX
	INY
	INY
	INY
	INY
	CPY #$20		; 1 tile?
	BCC tloop1	; no, loop
	
	LDA dst+1		; next blockline
	CLC
	ADC #$05
	STA dst+1
	CMP #$BD		; all through?
	BCC bloop1	; no, loop

	INC cnt320	; count
	BNE sm6
	INC cnt320+1
sm6	LDA cnt320	; 320 reached?
	CMP #$40		; no, action
	BNE adinc
	LDA cnt320+1	; else, finished
	BNE finish
	
adinc	DEC adcnt
	BNE adskip
	INC y2
	INC y2+2
	LDA #$08
	STA adcnt
adskip	JMP vloop
finish	RTS

; -------------------------------------- 

clearad	LDA spren
	AND #$F3
	STA spren
	LDA spritehi
	AND #$F3
	STA spritehi
	RTS

; -------------------------------------- 

initad	STA adcnt
	LDY #$3C
	LDA #$00
adl0	STA spr255+3,Y
	DEY
	BPL adl0
	sty spr255
	sty spr255+1
	sty spr255+2
	LDA #$0F
	STA $D029
	STA $D02A
	LDA $D01D
	ORA #$0C
	STA $D01D
	LDA spritehi
	ORA #$0C
	STA spritehi
	LDA #$08
	STA $D004
	LDA #$20
	STA $D006
	LDA #$92
	STA y2
	STA y2+2
	sty $07FA
	sty $07FB
	LDA spren
	ORA #$0C
	STA spren
	RTS

; -------------------------------------- Requester

smlst	!by 0
	!by 6,12,17,13,$81,0,0
	!scr "Vertical Smooth@"
sdith	!by 10,12,17,3,$ca
	!wo evgray
dithtx	!scr "Gray Values@"
smode	!by 13,12,17,3,$ca
	!wo evcolor
modetx	!scr "Color Values@"
	!by 16,12,17,3,$c9
	!wo evcan
	!scr "Cancel@"
	!by $c0,8,12,15
	!scr "Apply Pixels as@"
	!by $80

; -------------------------------------- Data

mode	!by $ff

coltab	!by $00,$33,$33,$33,$33,$22,$22,$33,$33,$22,$33,$33,$33,$33,$33,$77
	!by $33,$11,$33,$11,$33,$11,$22,$33,$88,$55,$33,$77,$88,$77,$77,$88
	!by $33,$33,$22,$22,$44,$44,$22,$33,$77,$66,$33,$77,$bb,$66,$aa,$77
	!by $33,$11,$22,$33,$22,$33,$22,$33,$77,$77,$33,$77,$77,$77,$aa,$77
	!by $33,$33,$44,$22,$44,$44,$44,$33,$55,$66,$22,$77,$77,$66,$22,$99
	!by $22,$11,$44,$33,$44,$55,$44,$55,$88,$55,$77,$77,$88,$99,$55,$99
	!by $22,$22,$22,$22,$44,$44,$66,$66,$77,$99,$66,$99,$bb,$99,$aa,$99
	!by $33,$33,$33,$33,$33,$55,$66,$77,$88,$99,$77,$77,$bb,$bb,$ee,$bb
	!by $33,$88,$77,$77,$55,$88,$77,$88,$88,$99,$77,$88,$cc,$ee,$cc,$bb
	!by $22,$55,$66,$77,$66,$55,$99,$99,$99,$99,$77,$bb,$bb,$99,$bb,$bb
	!by $33,$33,$33,$33,$22,$77,$66,$77,$77,$77,$aa,$ee,$ee,$ee,$aa,$bb
	!by $33,$77,$77,$77,$77,$77,$99,$77,$88,$bb,$ee,$bb,$bb,$dd,$bb,$ff
	!by $33,$88,$bb,$77,$77,$88,$bb,$bb,$cc,$bb,$ee,$bb,$cc,$bb,$ee,$ff
	!by $33,$77,$66,$77,$66,$99,$99,$bb,$ee,$99,$ee,$dd,$bb,$dd,$ee,$ff
	!by $33,$77,$aa,$aa,$22,$55,$aa,$ee,$cc,$bb,$aa,$bb,$ee,$ee,$ee,$bb
	!by $77,$88,$77,$77,$99,$99,$99,$bb,$bb,$bb,$bb,$ff,$ff,$ff,$bb,$ff

modend	!eof
