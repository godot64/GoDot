
	!src "godotlib.lib"
	*= $c000
	!ct pet
;	!sl "labels.txt"

; ----------------------------------------- 
;
;  mod.RimBooster
;   Modifier to intensify one pixel wide contour lines
;
;  1.00, 02.12.23: first release
;
; ----------------------------------------- 

; ----------------------------------------- Equates

	zeile	= sc_merk
	spalte	= zeile+1

	adcnt		= $30 	; activity counter
	data		= $31	; /32, pointer into 4bit
	compare		= $33	; color to compare to
	original		= $34	; original color
	combine		= $35	; combine pixels

	sprptr		= $07f8	; activity sprites
	spr255		= $3fc0

	spr2x		= $d004
	spr2y		= $d005
	msbx		= $d010
	spren		= $d015
	sprxe		= $d01d
	border		= $d020
	sprcol2		= $d029

; ----------------------------------------- Header

header	jmp start
	!by $20		; = this is a modifier
	!by 0
	!by 0
	!wo modend
	!wo 0
	!tx "Boost Contours  "
	!tx "1.00"
	!tx "02.12.23"
	!tx "A.Dettke        "

; ----------------------------------------- Main 

start	jsr makechr	; define toggle sign
	ldx #<screenlst	; build requester
	ldy #>screenlst
	jsr gd_screen

	sta sc_loop	; care for text mode
	ldx palgad	; palette gadget values
	inx
	stx palzl
	stx sc_zl
	ldx palgad+1
	inx
	stx palsp
	stx sc_sp
	ldx #4		; 4x4 area (color chooser)
	stx sc_br
	stx sc_ho
	jsr gd_esm3	; compute address and invert

	lda gr_picked	; get previously selected color to .x
	and #15		; (will be marked by "+")
	tax
	jsr initpal	; and show colors

	jmp gd_eloop	; now wait for gadget clicks

; ----------------------------------------- Event: Leave Module

evcancel	sec
	rts

; --------------------------------------- Event: Boost thin contour lines

evboost	jsr initad
	ldy #<sy_4bit
	lda #>sy_4bit
	sty data		; .y=0
	sta data+1

	lda col
	and #$0f
	tax
	lda doublepix,x
	sta compare

-	lda (data),y	; get two pixels
	sta original	; store
	cmp compare	; each?
	beq +++		; yes

	and #$f0		; left?
	lsr		; double left one
	lsr
	lsr
	lsr
	tax
	lda doublepix,x	; equal?
	cmp compare
	beq ++		; yes, set double

	lda original	; no, right?
	and #$0f
	tax
	lda doublepix,x	; double right one
	cmp compare	; equal?
	bne +++		; no, proceed

	ldx mode		; hires or multi?
	bne ++

	iny		; HIRES on right pixel:
	bne +		; on page end?
	inc data+1	; yes
	lda data+1
	cmp #>sy_bigbuffer	; end of 4bit?
	beq finish	; yes, done
+	tya		; divideable by four?
	and #3
	beq +++		; yes, skip and leave unchanged
	lda (data),y	; no, get next pixel
	and #$0f
	sta original
	lda compare	; insert pixel 
	and #$f0
	ora original

++	sta (data),y	; set pixel

+++	iny		; proceed
	bne -
	jsr adinc		; activity
	inc data+1
	lda data+1
	cmp #>sy_bigbuffer	; until end of 4bit
	bne -

finish	sta gr_redisp	; graphics changed
	jsr clearad	; end activity
-	sec		; finished, leave modifier
	rts
	
; --------------------------------------- Event: Set Mode

evtogmode	ldx mode		; 0: hires / 1: multi
	beq ed0
	ldx #$ff
ed0	inx
	stx mode
	bne ed1
	ldy #4
	!by $2c
ed1	ldy #9
	ldx #4
ed2	lda modes,y
	sta togtx,x
	dey
	dex
	bpl ed2
	ldy #0		; select gadget
out2	jsr settab
ed3	ldy #6
	jmp gd_xtxout1

; ------------------------------------------------ palgad-Event: Pick Color

evgetcol	sec		; compute row where user clicked
	lda zeile
	sbc palzl
	asl
	asl
	sta hold
	sec		; compute column
	lda spalte
	sbc palsp
	clc
	adc hold
	tax		; take as index into palette
	lda gr_basepal,x
	tax
	ora #$80		; sign valid
	sta gr_picked
initpal	lda c64pal,x	; re-display palette
	sta col
	jsr makepal
	clc
	rts

; ------------------------------------------------ create palette chooser

makepal	lda gr_picked	; get current color
	and #15
	sta plast		; and store

	lda palsp		; create chooser, first column
	sta sc_sp
	pha
	ldx #1		; width and height = 1
	stx sc_br
	stx sc_ho
	dex
	stx cnty		; counters = 0
	stx hold

mp1	stx cntx
	ldy hold
	jsr colorize	; colorize area (1x1)
	sec		; is PICKED color?
	lda sc_vekt20
	sbc #40
	sta sc_vekt20
	lda sc_vekt20+1
	sbc #$d4
	sta sc_vekt20+1
	ldy sc_chgcol
	cpy plast
	beq mp2
	lda #160		; no, write shift space
	bne mp3
mp2	lda #171		; yes, write "+"
mp3	ldy #0
	sta (sc_vekt20),y
	inc sc_sp		; next column
	inc hold
	ldx cntx
	inx
	cpx #4
	bne mp1

	pla		; re-get start column
	pha
	sta sc_sp
	ldx #0
	inc sc_zl		; next row
	inc cnty
	lda cnty
	cmp #4
	bne mp1

	pla		; clear stack
	rts		; finished

colorize	lda gr_basepal,y	; get color
	sta sc_chgcol
	ldx #4
	jmp gd_fcol	; colorize area (1x1)

; ----------------------------------------- Text Output Handler

tabigad	!wo toggad	; .y:0

settab	lda #<tabigad
	sta sc_texttab
	lda #>tabigad
	sta sc_texttab+1

	lda (sc_texttab),y
	sta sc_screentab
	iny
	lda (sc_texttab),y
	sta sc_screentab+1

	lda #0
	tax
	tay
gt0	jsr gd_setpos
	cpx #4
	bne gt0
	jsr gd_trim
	jmp gd_initmove

; ----------------------------------------- Output Text

textout	ldy #0		; .y: index in tabigad
	jsr settab
	ldy #6		; offset to gadget text area
	jmp gd_xtxout1	; show text

; --------------------------- Kringel definieren

makechr	ldx #7
-	lda chschr,x
	sta sc_undochar,x
	dex
	bpl -
	rts

; ------------------------------------------------ Activity

adinc	dec adcnt		; advance after adcnt passes
	bne +
	inc spr2y
	inc spr2y+2
	jmp setadcnt	; and reset adcnt

; ------------------------------------------------ Finish Activity

clearad	lda spren		; progress bar off
	and #$f3
	sta spren
	lda msbx
	and #$f3
	sta msbx
	lda #$ff		; graphics buffer changed, so
	sta gr_redisp	; set flags for system
	clc 		; finished
+	rts 

; ------------------------------------------------ Init Activity

initad	ldy #60		; prepare spriteblock 255
	lda #0
-	sta spr255+3,y
	dey 
	bpl -
	sty spr255	; thin line
	sty spr255+1
	sty spr255+2
	lda #15		; light gray
	sta sprcol2
	sta sprcol2+1
	lda sprxe		; x-expanded
	ora #$0c
	sta sprxe

	lda msbx		; x is beyond 255
	ora #$0c
	sta msbx
	lda #8		; so x is 8 (plus 256)
	sta spr2x
	lda #$20
	sta spr2x+2
	lda #$92		; y is 146
	sta spr2y		; (in Image Information window)
	sta spr2y+2

	sty sprptr+2	; use sprite 255
	sty sprptr+3
	lda spren
	ora #$0c		; activate bar
	sta spren

setadcnt	lda #4		; init counter to 6 (times 40 = 200 raster lines)
	sta adcnt
	rts

; ----------------------------------------- Data

col	!by 0		; chosen color, default: black
mode	!by 1		; mode, default: multi
modes	!scr "HiresMulti"

palzl	!by 0
palsp	!by 0
plast	!by 0
hold	!by 0
cntx	!by 0
cnty	!by 0

c64pal	!by $00,$ff,$44,$cc,$55,$aa,$11,$dd
	!by $66,$22,$99,$33,$77,$ee,$88,$bb
doublepix	!by $00,$11,$22,$33,$44,$55,$66,$77
	!by $88,$99,$aa,$bb,$cc,$dd,$ee,$ff

chschr	!by $00,$3a,$46,$4e,$40,$40,$3c,$00

; ----------------------------------------- Screenlist

screenlst	!by 0
	!by 7,13,15,8,$01	; Requester
	!wo 0

palgad	!by 9,14,6,6,$4c	; Palette gadget
	!wo evgetcol

toggad	!by 8,20,8,3,$cd	; toggle mode
	!wo evtogmode
	!by 223
togtx	!scr "Multi",0

	!by 10,20,8,3,$cd	; execute modifier
	!wo evboost
	!scr "Boost!",0

	!by 12,20,8,3,$ce	; exit
	!wo evcancel
	!scr "Cancel",0

	!by $c0		; caption
	!by 7,14,4
	!scr "Rims",0

	!by $80		; end of screen list

; ----------------------------------------- 

modend	!eof
