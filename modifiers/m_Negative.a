
	!src "godotlib.lib"
	*= $c000
	!ct pet
;	!sl "labels.txt"

; ------------------------------------------------------------ 
;
; mod.Negative
;   Module to revert all data in 4Bit area according to their mode,
;   where in color mode there are no appropriate reverted colors for
;   BWN, LRD and LGN, they get substituted by DGR+RED (for BWN),
;   RED+ORA (for LRD) and YEL+GRN (for LGN), so better display in IFLI
;
;   1.00, 11.11.92, first release
;   1.01, 03.09.20, added GUI to choose between gray and color
;   1.02, 15.11.23, new: inversion of inversion is original again
;
; ------------------------------------------------------------ 

	adcnt		= $30 	; (activity counter, sample location)
	palette		= $31	; /$32
	dest		= $33	; /$34
	scan		= $35	; /$36
	merky		= $37
	merka		= $38
	countb		= $39

	sprptr		= $07f8
	spr255		= $3fc0

	spr2x		= $d004
	spr2y		= $d005
	msbx		= $d010
	spren		= $d015
	sprxe		= $d01d
	border		= $d020
	sprcol2		= $d029

; --------------------------------------- Header

header 	jmp start
	!by $20
	!by 0
	!by 0
	!wo modend
	!wo 0
	!tx "Revert 4Bit Data" 
	!tx "1.02"
	!tx "15.11.23"
	!tx "A.Dettke/W.Kling"

; ----------------------------------------- Main

start	jsr makechr	; Listkringel definieren
	lda #3
	sta cntwert
	ldx mode		; Palette vorbesetzen
	beq +
	jsr dth2
	bcc ++
+	jsr dth3
++	ldx #<neglst	; Modul aktivieren
	ldy #>neglst
	jmp gd_xmloop

; -------------------------------------- Event: Set Mode

evnegatv	ldx mode		; current mode
	beq +
	ldx #$ff
+	inx		; increment

dth1	stx mode		; offset auf mode merken
	beq dth3
dth2	lda #<colpal	; mode 1: color
	ldy #>colpal
	bne +
dth3	lda #<godpal	; mode 0: gray
	ldy #>godpal
+	sta palette
	sty palette+1
	
	lda gadoffs,x	; set text
	tax
	ldy #5
dpi1	lda modetxts,x
	sta modetx,y
	dex
	dey
	bpl dpi1

	ldy #0		; 0: the only choice
dpi2	jsr settab
	ldy #6
	jmp gd_xtxout1

; ----------------------------------------- Event: Execute

evexec	jsr initad	; prepare activity

	lda #<sy_4bit	; start at 4Bit
	ldy #>sy_4bit
	sta dest
	sty dest+1

	ldy #0		; perform:
-	sty merky
	lda (dest),y	; get double pixel
	tax
	and #15
	txa
	lsr		; treat left one
	lsr
	lsr
	lsr
	tay
	lda (palette),y
	and #$f0
	sta merka		; save result

	txa		; re-get double pixel
	and #15		; treat right one
	tay
	lda (palette),y
	and #15
	ora merka		; join with left
	ldy merky
	sta (dest),y	; write back new double pixel
	iny 
	bne -

	jsr adinc		; activity
	inc dest+1
	lda dest+1
	cmp #>sy_bigbuffer	; until end of 4Bit
	bne -

; ----------------------------------------- Now search IFLI colors

	jsr initad	; init activity
	lda #1
	sta cntwert

	lda #>sy_4bit
	ldy #<sy_4bit	; .y=0
	sta scan+1
	sty scan
	sty countb	; set counter to 40

---	lda #<800		; set counter from 800
	sta ls_vekta8
	lda #>800
	sta ls_vekta8+1

--	lda (scan),y	; scan 4bit

	ldx #$ff		; index in xchange list
-	inx
	cmp fcols,x	; now check colors
	bne +
	lda tcols,x	; if found, exchange
	sta (scan),y
	bne ++		; and proceed to next
+	cpx #6
	bne -

++	inc scan		; count scanned bytes:
	bne +
	inc scan+1
+	jsr count		; 800 x 40 = 32000 
	bne --
	jsr adinc
	inc countb
	lda countb
	cmp #40
	bcc ---

; ----------------------------------------- Oddswap

	lda #3
	sta cntwert
	jsr initad	; init activity
	lda #<sy_4bit
	ldy #>sy_4bit
	sta dest
	sty dest+1

	ldy #0
-	tya 
	and #4		; choose every other raster line..
	beq +

	lda (dest),y	; ...and exchange nibbles there
	lsr
	lsr
	lsr
	lsr
	sta merka
	lda (dest),y
	asl
	asl
	asl
	asl
	ora merka
	sta (dest),y

+	iny 
	bne -

	jsr adinc		; activity
	inc dest+1	; next page
	lda dest+1
	cmp #>sy_bigbuffer	; until end of 4bit
	bne -

	sta gr_redisp	; Render-Flag für System setzen
	jsr clearad	; clear activity display

; ----------------------------------------- Event: Exit

evexit	sec		; leave module
	rts

; ------------------------------------ Output gadget text routines

tabigad	!wo modegad

settab	lda #<tabigad
	sta ls_vekta8
	lda #>tabigad
	sta ls_vekta8+1

gettab	lda (ls_vekta8),y
	sta sc_screentab
	iny
	lda (ls_vekta8),y
	sta sc_screentab+1
	lda #0
	tax
	tay
gt0	jsr gd_setpos
	cpx #3
	bne gt0
	stx sc_ho
	jsr gd_trim
	jmp gd_initmove

; ----------------------------------------- Counters

count 	lda ls_vekta8	; decrement ls_vekta8/9 by 1
	bne cou7
	dec ls_vekta8+1
cou7 	dec ls_vekta8
	lda ls_vekta8	; and check if 0 (sets .e)
	ora ls_vekta8+1
	rts

; ----------------------------------------- Abschluss Activity

clearad	lda spren		; Wanderbalken aus
	and #$f3
	sta spren
	lda msbx
	and #$f3
	sta msbx
	clc 		; fertig
	rts 

; ----------------------------------------- Activity

adinc	dec adcnt		; advance after adcnt passes
	bne +
	inc spr2y
	inc spr2y+2
	jmp setadcnt	; reset adcnt

; ----------------------------------------- Init Activity

initad	ldy #60		; Spriteblock 255 vorbereiten
	lda #0
-	sta spr255+3,y
	dey 
	bpl -
	sty spr255	; dünner Strich
	sty spr255+1
	sty spr255+2
	lda #15		; Farbe hellgrau
	sta sprcol2
	sta sprcol2+1
	lda sprxe		; doppelt breit
	ora #$0c
	sta sprxe
	lda msbx		; x über 255
	ora #$0c
	sta msbx
	lda #8		; x-Ordinate: 8 (plus 256)
	sta spr2x
	lda #$20
	sta spr2x+2
	lda #$92		; y-Ordinate: 146
	sta spr2y		; (im Image Information Fenster)
	sta spr2y+2
	sty sprptr+2	; Sprite 255
	sty sprptr+3
	lda spren
	ora #$0c		; Activity-Balken aktivieren
	sta spren

setadcnt	lda cntwert	; Zähler (3 x 40 = 120 pages)
	sta adcnt
+	rts

; ----------------------------------------- Kringel definieren

makechr	ldx #7
-	lda chschr,x
	sta sc_undochar,x
	dex
	bpl -
	rts

; ----------------------------------------- Screenlist

neglst	!by 0
	!by 9,13,13,7,$91
	!wo 0
	!scr "Negative",0

modegad	!by 11,18,8,3,$cf
	!wo evnegatv
modetx	!scr 223," Gray",0

	!by 13,13,6,3,$c7
	!wo evexec
	!scr "Exec",0

	!by 13,20,6,3,$ce
	!wo evexit
	!scr "Exit",0

	!by $c0,11,13,4
	!scr "Mode",0
	!by $80

; ----------------------------------------- Data

chschr	!by $00,$3a,$46,$4e,$40,$40,$3c,$00

godpal	!by $ff,$ee,$dd,$cc,$bb,$aa,$99,$88
	!by $77,$66,$55,$44,$33,$22,$11,$00
colpal	!by $ff,$dd,$bc,$bb,$cc,$aa,$88,$77
	!by $66,$c7,$55,$33,$44,$11,$15,$00

fcols	!by $74,$47,$43,$34,$da,$ad
tcols	!by $99,$99,$22,$22,$ee,$ee

cntwert	!by 3
mode	!by 0
gadoffs	!by 5,11
modetxts	!scr 223," Gray"
	!scr 223,"Color"

; ----------------------------------------- 

modend	!eof
