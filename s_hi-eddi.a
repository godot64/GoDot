
	*= $c000
	!src "..\godotlib.lib"
	!ct pet

; ----------------------------------- 
;
; svr.Hi-Eddi
;   Saver for colored Hires Images
;   format created by Hans Haberl (Pagefox)
;
; 1.00, 16.01.99, first release
; 1.01, 10.11.17, bug: "Leave" saved anyway (fixed)
;                 some minor fixes
;
; ----------------------------------- Equates

	gbyte	= $30
	cnt	= $31
	adcnt	= $3e

	offy	= $b3
	offx	= $b2

	colors	= $c82f
	vid1	= colors
	vid2	= $ca23
	colram	= $cc17
	back	= $cfff

; ----------------------------------- Header

header	jmp start
	!by $40
	!by 0
	!by 1
	!wo modend
	!wo 0
	!tx "Hi-Eddi Hires   "
	!tx "1.01"
	!tx "10.11.17"
	!tx "A.Dettke        "

; ----------------------------------- Main

start	ldx gr_nr		; Call for Input? (.x=1)
	dex
	bne st0
	jmp initinp	; yes, go there

st0	jsr setmode
	cpx #3		; ### 1.01 ab hier --
	beq st3

	jsr gd_sproff	; ### 1.01 bis hier --
	sta cnt		; .a=0
	lda gd_modswitch
	pha
	lda ls_flen
	sta wflen
	beq st1

	lda #1
	sta adcnt
	lda #52
	sta cntwert
	jsr getpic	; gather color data
	jsr wopen		; open file
	bne st2

	jsr getname	; store filename
	ldx #12
	jsr ckout
	jsr gd_clrms	; focus on status bar
	ldx #0
	jsr tcopy		; Message: "Bitmap"

	jsr write		; Write File to Disk

st2	jsr clrch		; close file
	lda #12
	jsr close
	jsr err9		; Write error?
	bne st1
	jsr setname	; yes, don't change name

st1	pla		; leave saver
	sta gd_modswitch
	jsr gd_spron	; ### 1.01
	sec
st3	rts


; --------------------------- 
; --------------------------- Input Routines

!src "..\input.inc"

; --------------------------- 
; --------------------------- 

; ----------------------------------- Open Writefile

pw	!tx "w,p,"
drinit	!tx "i0"
wflen	!by 0

wopen	jsr inull
	bne err8
	ldy wflen		; open 12,drive,12,"name,p,w"
	ldx #3
wo1	lda pw,x
	sta ls_nambuf,y
	iny
	dex
	bpl wo1
	sty wflen
	lda #12
	tay
	ldx ls_drive
	jsr filpar
	lda wflen
	ldx #<(ls_nambuf)
	ldy #>(ls_nambuf)
	jsr filnam
	jsr copen
	jmp err9

inull	ldx #<(drinit)
	ldy #>(drinit)
	lda #2
	jsr gd_sendcom
err9	jsr gd_xmess
	lda ls_err2
	and #15
err8	sec
	rts

; ----------------------------------- Message Handler

messout	ldx #<(message)	; output
	ldy #>(message)
	jmp gd_xtxout2

tcopy	ldy #0
tc0	lda txt,x
	beq clrmess
	sta message,y
	inx
	iny
	bne tc0

action	dec adcnt		; gauge
	bne ld4
	lda cntwert
	sta adcnt
	ldy offy		; ### 1.01 ab hier --
	cpy #22		; catch Gauge Overflow
	bne act0
	jsr clrmess
act0	ldx offx		; ### 1.01 bis hier --
	lda filltab,x
	sta mess,y
	jsr messout
	dec offx
	bpl ld4
	inc offy
	lda #7
	sta offx
ld4	rts

clrmess	ldx #21		; ### 1.01 (length corrected)
	lda #32		; init message and gauge
cl0	sta mess,x
	dex
	bpl cl0
	ldy #0
	ldx #7
	sty offy
	stx offx
	rts

filltab	!by 160,93,103,127,126,124,105,109

cntwert	!by 50

txt	!scr " Bitmap@"
	!scr " Colors@"

message	!fill 10,32
mess	!fill 22,32	; ### 1.01 (length corrected)
	!by 0

; ----------------------------------- Filename Handler

getname	ldx #0
si0	lda ls_lastname,x	; retrieve filename
	beq si1
	sta nbuf,x
	inx
	cpx #16
	bcc si0
si1	rts

setname	lda #0
	ldx #<(ls_picname)	; publish filename to GoDot
	ldy #>(ls_picname)
si3	stx sc_texttab
	sty sc_texttab+1
	tax
	ldy #0
si4	lda nbuf,x
	beq si5
	sta (sc_texttab),y
	inx
	iny
	bne si4
si5	rts

nbuf	!fill 16,32	; filename buffer
	!by 0

; ----------------------------------- Distributor

setmode	ldx used
	bmi requ
	cpx #3
	bcs canc
	rts

; ----------------------------------- Finish

; ----------------------------------- Event: Leave Saver

cn2	lda #3		; ### 1.01 (correct flag)
	!by $2c

canc	lda #$ff
	sta used

	sec
	rts

; ----------------------------------- Requester

requ	inc used		; now: 0
	ldx #<(hieddilst)
	ldy #>(hieddilst)
	jsr gd_xmloop
	jmp setmode

; ----------------------------------- Event: Set Compression Mode

evnocomp	inc used
	ldx used
	dex
	beq ec01
	ldx #$80
ec01	stx mode
	sec
	rts

; ----------------------------------- Screenlist

hieddilst	!by 0
	!by 4,11,18,16,$81,0,0
	!scr " Save Hi-Eddi @" 
	!by 11,11,18,3,$ca,<(evnocomp),>(evnocomp)
	!scr " Perform Save @"
	!by 15,11,18,3,$ca,<(cn2),>(cn2)
	!scr "  Leave Save  @"
	!by $80

; ----------------------------------- 

used	!by $ff
mode	!by 0

; ----------------------------------- Concat Colors

getpic	lda #$0b
	sta sc_texttab
	lda #<(vid1)
	ldx #>(vid1)
	ldy #$ce
	jsr move
	lda #$0b
	sta sc_texttab
	lda #<(vid2)
	ldx #>(vid2)
	ldy #$ee
	jsr move
	rts

; ----------------------------------- Move image data

move	sty sc_texttab+1
	sta sc_vekt20
	stx sc_vekt20+1
	lda #<(500)
	ldx #>(500)
	sta ls_vekta8
	stx ls_vekta8+1
	sei
	lda #$30
	sta 1
	ldy #0
mv0	lda (sc_texttab),y
	sta (sc_vekt20),y
	jsr count
	bne mv0
	lda #$36
	sta 1
	cli
	rts

; ----------------------------------- Counters

count	inc sc_vekt20
	bne cou5
	inc sc_vekt20+1
cou5	inc sc_texttab
	bne cou6
	inc sc_texttab+1
cou6	lda ls_vekta8
	bne cou7
	dec ls_vekta8+1
cou7	dec ls_vekta8
	lda ls_vekta8
	ora ls_vekta8+1
	rts

; ----------------------------------- Write Image to Disk

write	lda #0		; Start address $2000
	jsr bsout
	lda #$20
	jsr bsout

	lda #<(8192)	; bitmap
	ldx #>(8192)
	sta ls_vekta8
	stx ls_vekta8+1
	lda #<($2000)	; from $2000
	ldx #>($2000)
	sta sc_texttab
	stx sc_texttab+1
wr1	ldy #0
	lda (sc_texttab),y
	jsr pack
	jsr action
	jsr cou5
	bne wr1

	ldx #8		; Message: "Colors"
	jsr tcopy
	lda #7
	sta cntwert

	lda #<(1024)	; colors
	ldx #>(1024)
	sta ls_vekta8
	stx ls_vekta8+1
	lda #<(colors)
	ldx #>(colors)
	sta sc_texttab
	stx sc_texttab+1
wr0	ldy #0
	lda (sc_texttab),y
	jsr pack
	jsr action
	jsr cou5
	bne wr0

	lda #<(vid1)	; Restore system color buffer
	sta sc_texttab
	lda #$0b
	ldx #$ce
	ldy #>(vid1)
	jsr move

	jsr canc
	lda mode		; compressed?
	beq wl3		; no, branch

	lda gbyte		; flush chain
	eor #$ff

; ----------------------------------- Compress

pack	bit mode
	bmi wl4
	jmp bsout		; just write if not compressed

wl4	cmp gbyte
	beq incr
p255	pha
	lda cnt
	beq wl1
	cmp #$ff
	beq wl0
	cmp #4		; at least 4 bytes identical?
	bcs wl0
	lda gbyte
	cmp #$fe
	bne wl2
wl0	lda #$fe		; compress: $fe, byte, counter
	jsr bsout
	lda gbyte
	jsr bsout
	lda cnt
	jsr bsout
	lda #0
	sta cnt
	beq wl1
wl2	lda gbyte
	jsr bsout
	dec cnt
	bne wl2
wl1	pla
	sta gbyte
incr	inc cnt
	lda cnt
	cmp #$ff
	bne wl3
	lda gbyte
	jsr p255
	dec cnt
wl3	rts

; ----------------------------------- 

modend	!eof
