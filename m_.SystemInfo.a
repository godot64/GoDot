	!src "..\godotlib.lib"	; library nicht erforderlich
	*= $c000

; ------------------------------------------------ 
;
; mod.SystemInfo
; Modul zur Anzeige der GoDot-Systeminformationen
;
; 1.04, 25.08.95
; 1.05, 16.07.17, re-coded by AD
;                 bug fixes and shorter code
;
; Modul von Martin Burggraf
;
; ------------------------------------------------ Declarations

	pport		= $01
	src		= $30
	dst		= $32
	ymrk		= $34
	filetype		= $1d29
	vupmem		= $f01a
	dupmem		= $f01e

; ------------------------------------------------ Header

	jmp start
	!by $20
	!by $00
	!by $00
	!wo modend
	!wo $00 
	!pet "SystemInfo      "
	!pet "1.05"
	!pet "16.07.17"
	!pet "M.Burggraf/AD   "

; ------------------------------------------------ Main

start	jsr setsysfvs	; gather infos
	jsr setdrinfo
	jsr setwdrives
	jsr toggle	; xchange textcolors

	ldx #<silist	; show requester
	ldy #>silist
	jsr gd_screen

	jsr toggle	; re-xchange textcolors
	jsr gd_eloop	; wait

; ------------------------------------------------ Event: Leave

evcan	sec 
	rts 

; ------------------------------------------------ System File versions

setsysfvs	ldx #8		; retrieve ">" significations from filerequester
-	lda cmdflags-8,x	; (flags for CMD drives and SuperCPU)
	tay 
	lda filetype,y	; get flag
	pha 
	lda cmdsigns-8,x	; get offset
	tay 
	pla 
	sta vupdtx+2,y	; set flag
	inx 
	cpx #13
	bne -

	sei 
	lda pport		; switch to RAM only
	pha 
	lda #$34
	sta pport

	ldx #3
-	lda vupmem,x	; upmem (version)
	sta vuptx,x
	dex 
	bpl -

	ldx #7
-	lda dupmem,x	; upmem (date)
	sta vupdtx,x
	dex 
	bpl -

	pla 
	sta pport
	cli 

	lda sy_versioninit	; Booter
	jsr gd_xcnvdez
	sta vboottx
	lda sy_versioninit+1
	pha
	and #$0f
	jsr gd_xcnvdez
	sta vboottx+3
	pla
	lsr
	lsr
	lsr
	lsr
	jsr gd_xcnvdez
	sta vboottx+2
	lda sy_version	; Kernel
	jsr gd_xcnvdez
	sta vkerntx
	lda sy_version+1
	pha
	and #$0f
	jsr gd_xcnvdez
	sta vkerntx+3
	pla
	lsr
	lsr
	lsr
	lsr
	jsr gd_xcnvdez
	sta vkerntx+2
	rts 

; ------------------------------------------------ Workdrives

setwdrives
	lda ls_sysdrive	; sys
	jsr getdigits
	stx sysdrtx
	sta sysdrtx+1
	lda ls_bootdrive	; boot
	jsr getdigits
	stx bootdrtx
	sta bootdrtx+1
	lda ls_loadfrom	; from
	jsr getdigits
	stx fromdrtx
	sta fromdrtx+1
	lda ls_saveto	; to
	jsr getdigits
	stx todrtx
	sta todrtx+1
	rts 

; ------------------------------------------------ Driveinfos

setdrinfo	ldy #$ff
	sty ymrk

-	jsr getdrinfo	; U8 bis U11
	beq +
	ldy ymrk
	lda txtablo,y
	ldx txtabhi,y
	sta dst
	stx dst+1
	jsr transfer
+	ldy ymrk
	cpy #3
	bne -

getrminfo	lda ls_ramdrive	; U12
	and #$0f
	tax 
	cpx #$02
	beq drc0
	cpx #$03
	beq drc1
	cpx #$04
	beq drc2
	cpx #$05
	beq drc3
	cpx #$08
	beq drc4

	ldx #<nonetx
	ldy #>nonetx
	jmp dr9

drc0	ldx #<vdctx
	ldy #>vdctx
	jmp dr9
drc1	ldx #<pfoxtx
	ldy #>pfoxtx
	jmp dr9
drc2	ldx #<reu64tx
	ldy #>reu64tx
	jmp dr9
drc3	ldx #<reu50tx
	ldy #>reu50tx
	jmp dr9
drc4	ldx #<reu00tx
	ldy #>reu00tx

dr9	stx src
	sty src+1
	ldx #<ramtx
	ldy #>ramtx
	stx dst
	sty dst+1

transfer 	ldy #4		; transfer info
-	lda (src),y
	sta (dst),y
	dey 
	bpl -
	rts 

; ------------------------------------------------ 

toggle	ldx sc_normtext	; exchange Hilite and Normtext
	ldy sc_hilite	; (gute Idee!)
	stx sc_hilite
	sty sc_normtext
	rts

; ------------------------------------------------ ReplaceZero

getdigits	jsr gd_xcnvdez	; .a=Einer
	cpx #$30		; .x=Zehner
	bne +
	ldx #$20
+	rts 

; ------------------------------------------------ Screenlist

silist	!by $00
	!by $01,$09,$16,$16,$81
	!wo 0
	!scr "System Information@"
	!by $04,$18,$06,$05,$20 
	!wo 0
	!by $09,$14,$0a,$03,$20
	!wo 0
	!by $0e,$0a,$0b,$07,$20
	!wo 0
	!by $0e,$1a,$04,$06,$20
	!wo 0
	!by $14,$17,$07,$03,$cc
	!wo evcan
	!scr "Leave@"

	!by $c0,$04,$0a,$08 
	!scr "Bootfile@"
	!by $c0,$05,$0a,$06
	!scr "Kernel@"
	!by $c0,$06,$0a,$05
	!scr "Upmem@"
	!by $c0,$09,$0a,$04 
	!scr "Date@"
	!by $c0,$0c,$0a,$0b 
	!scr "Driveinfos:@"
	!by $c0,$0e,$15,$03 
	!scr "Sys@"
	!by $c0,$0f,$15,$04 
	!scr "Boot@"
	!by $c0,$10,$15,$04 
	!scr "Load@"
	!by $c0,$11,$15,$04 
	!scr "Save@"
	!by $c0,$04,$18,$04 
vboottx	!scr " .  @"
	!by $c0,$05,$18,$04 
vkerntx	!scr " .  @"
	!by $c0,$06,$18,$04 
vuptx	!scr " .  @"
	!by $c0,$09,$14,$08 
vupdtx	!scr "  .  .  @"
	!by $c0,$0e,$0a,$09 
	!scr "  8:"
dr8tx	!scr "     @"
	!by $c0,$0f,$0a,$09
	!scr "  9:"
dr9tx	!scr "     @"
	!by $c0,$10,$0a,$09
	!scr " 10:"
dratx	!scr "     @"
	!by $c0,$11,$0a,$09
	!scr " 11:"
drbtx	!scr "     @"
	!by $c0,$12,$0a,$09
	!scr "RAM:"
ramtx	!scr "     @"
	!by $c0,$0e,$1a,$02
sysdrtx	!scr "  @"
	!by $c0,$0f,$1a,$02 
bootdrtx	!scr "  @"
	!by $c0,$10,$1a,$02 
fromdrtx	!scr "  @"
	!by $c0,$11,$1a,$02 
todrtx	!scr "  @"
	!by $80 

; ------------------------------------------------ 

dr41tx	!scr " 1541"
dr70tx	!scr " 1570"
dr71tx	!scr " 1571"
dr81tx	!scr " 1581"
drcmdtx	!scr " CMD "
nonetx	!scr " C64 "
vdctx	!scr " VDC "
pfoxtx	!scr " PFox"
reu64tx	!scr " 1764"
reu50tx	!scr " 1750"
reu00tx	!scr " 1700"

txtablo	!by <dr8tx,<dr9tx,<dratx,<drbtx
txtabhi	!by >dr8tx,>dr9tx,>dratx,>drbtx

cmdflags	!by $22,$29,$31,$39,$42
cmdsigns	!by $0e,$1c,$2a,$38,$46 

; ------------------------------------------------ 

getdrinfo	ldy ymrk
	iny

	lda ls_units,y	; U8 bis U11
	sty ymrk
	tax 
	and #$0f
	beq +

	txa 		; typ		; dieser Vorgang ist viermal gleich!
	lsr
	lsr
	lsr
	lsr
	cmp #$00		; 1570?
	beq dr80
	cmp #$01		; 1571?
	beq dr81
	cmp #$02		; cmd?
	beq dr82
	cmp #$04		; 1541?
	beq dr83
	cmp #$08		; 1581?
	beq dr84

dr83	ldx #<dr41tx	; 1541
	ldy #>dr41tx
	jmp dr5
dr84	ldx #<dr81tx	; 1581
	ldy #>dr81tx
	jmp dr5
dr80	ldx #<dr70tx	; 1570
	ldy #>dr70tx
	jmp dr5
dr81	ldx #<dr71tx	; 1571
	ldy #>dr71tx
	jmp dr5
dr82	ldx #<drcmdtx	; cmd
	ldy #>drcmdtx

dr5	stx src
	sty src+1
+	rts

; ------------------------------------------------ 

modend	!eof
