
	!src "godotlib.lib"
	*= $c000
	!ct pet
;	!sl "labels.txt"

; ----------------------------------- 
;
; Loader for Printmaster or Printshop A & B
;
;        1.00, 22.04.01: first release
;        1.01, 23.04.01: added ERROR messages
;        1.02, 05.05.01: added safe filetype destinction
;        1.03, 14.08.18: added another PM filetype
;                        changed image information display
;        1.04, 04.05.22: added: set render mode automatically
;
; ----------------------------------- 

; ----------------------------------- Equates

	width		= $30	; width in tiles
	height		= $31
	col0		= $32	; paper color
	col1		= $33	; ink colors
	col2		= $34
	col3		= $35

	dst		= $36	; /$37
	dst0		= $38	; /$39
	dst00		= $3a	; /$3b
	adcnt		= $3c	; activity counter
	btcnt		= $3d	; counts 4 bytes
	tilecnt		= $3e	; counts WIDTH tiles
	offx		= $3f
	offy		= $40
	lcnt		= $41
	lines		= $42
	merky		= $43
	blcnt		= $44
	gbyte		= $45
	ftype		= $46

	patch		= $17af
	flen		= $bd20	; /$bd21: filelength
	load		= $ffd5	; kernal LOAD 

; ----------------------------------- Header

godheader	jmp start
	!by $80
	!by 0
	!by 0
	!wo modend
	!wo 0
	!tx "PMaster/PShopA&B"
	!tx "1.04"
	!tx "04.05.22"
	!tx "A.Dettke        "

; ----------------------------------- 

jerror	jmp error
fail	jmp faila

start	jsr getcols	; set color assignments
	jsr getname	; save name of file
	jsr getflen	; get filelength
	lda flen+1	; more than 255 blocks?
	bne fail		; must be wrong then

	jsr setpmname	; (re-)set Type name to "PMaster"
	jsr setmodetx	; (re-)set Mode Data
	jsr gd_xopen	; open file for input
	ldx #0		; Start at $4000
	ldy #>sy_4bit
	stx status
	stx dst		; set destination address
	stx dst0
	stx dst00
	sty dst+1
	sty dst0+1
	sty dst00+1
	inx 		; activity to 1: start right off
	stx adcnt

	ldy #52		; height is 52 pixels (PM or PSA)
	sty height
	ldy #11		; width is 11 tiles (88 pixels)

	jsr onebyte	; get first byte
	bne jerror
	tax		; Printshop?
	beq ps0		; yes
	cmp #$50 		; Signature: "P"?
	beq pm0		; yes

ps0	jsr onebyte	; no, get second byte (of Printshop file)
	bne jerror	; (should be "X", $58)
	sta gbyte
	jsr setpsname	; set image information
	ldy #11		; then, re-get correct width
	inx		; re-set Printshop Flag to $00
	lda flen		; Printshop A?
	cmp #3
	beq pm1		; yes

	inc which
	lda gbyte
	ldy #45		; no, Printshop B is 45 pixels high
	ldx #$34		; "4"
	stx modetx+1
	stx modetx+5
	inx
	stx modetx+6
	cmp #$58		; Printshop B?
je1	bne fail		; no, not a valid file

	sty height
	ldy #6		; B is 6 tiles wide (48 pixels)
	ldx #0

pm1	txa
	sta ftype		; Printshop is type $00 (zero)
	beq st1

pm0	jsr onebyte	; get second byte (of Printmaster file)
je0	bne jerror
	cmp #$87		; signature "G"?
	beq +
	cmp #$77		; signature "M"?
	bne je1

+	sta ftype		; Printmaster is type $77 (not zero)
	ldx #12

st1	sty width		; width either 11 (PM/PSA) or 6 (PSB)
	jsr tcopy

	lda ftype
	beq st3
	ldy #2
st2	jsr onebyte	; get Printshop header and skip
	bne je0
	iny
	cpy #7		; 7 bytes header
	bne st2

; ----------------------------------- 

st3	lda #8		; set # of lines per tile (8)
	sta lines

ld6	jsr gd_clrms	; clear gauge area

	lda #4		; preset 4bit-Byte counter to 4
	sta btcnt
	lda #7		; height is 6.5 tiles
	sta blcnt

ld00	lda lines		; 8 lines per tile (except last row)
	sta lcnt

ld0	lda ftype
	beq ld03
	jsr basin		; skip Printmaster line header ($8b)

ld03	lda width		; WIDTH tiles per row (11)
	sta tilecnt

ld02	ldy #0		; must be 0 for 1 tile
	jsr basin		; get 1 byte
	eor #$ff		; revert it
	sta gbyte
ld01	jsr cnvbyte	; convert to 4 bytes
	sta (dst),y	; store to 4bit memory
	sty merky
	jsr action
	ldy merky
	iny
	dec btcnt		; counts 4
	bne ld01		; not 4 yet, loop

	lda #4		; counter to 4 again
	sta btcnt

	clc
	lda dst		; proceed to next tile (in 4Bit)
	adc #32
	sta dst
	bcc ld10
	inc dst+1

ld10	dec tilecnt	; all tiles of a row (11)?
	bne ld02

	clc		; then proceed to next line
	lda dst0
	adc #4
	sta dst0
	sta dst
	bcc ld09
	inc dst0+1
ld09	lda dst0+1
	sta dst+1

	dec lcnt		; all lines of a row?
	bne ld0

	sec		; yes, subtract 8 from height
	lda height
	sbc #8
	sta height
	bcc ld3		; finished if negative
	cmp #6		; last tile?
	bcs ld12		; no, don't change LINES
	sta lines		; fill last row to half

ld12	clc		; add 1280 to start address for next row
	lda dst00+1
	adc #5
	sta dst00+1
	sta dst0+1
	sta dst+1
	lda dst00
	sta dst0
	sta dst

	dec blcnt		; count block rows
	bne ld00

ld3	jsr setinfo	; then, set fileinfo
	jsr tog2hires	; ### 1.04
ld7	jsr gd_xclose	; close file
	jsr gd_spron	; mouse pointer on
	jsr gd_xmess	; display floppy message

cancel	sec		; leave loader
	rts

; ----------------------------------- 

cnvbyte	lda #0		; convert:
	asl gbyte		; fetch 2 pixels
	rol
	asl gbyte
	rol
	tax		; assign color and return value
	lda col0,x
	rts

; ----------------------------------- File Error

error	jsr ld7
	clc
	rts

; ----------------------------------- Get 1 Byte for Header

onebyte	jsr basin
	ldx status
	rts

; ----------------------------------- Activity Counter

cntwert	!by 15

; ----------------------------------- Messages

faila	jsr ld7		; no valid file: close
	ldx #0
	ldy #0
fl0	lda err1,x	; set message text
	sta message,y
	inx
	iny
	cpy #32
	bne fl0
	jsr gd_clrms	; clear output line
	  
; ----------------------------------------- Set Render Mode

tog2hires	lda #2		; für Umschalten auf Hires
	!by $2c
tog2multi	lda #0		; für Umschalten auf Multi    
	sta gr_cmode
	lda #16
	sta sc_br
	lda #$4c		; self modifying
	sta patch
	jsr ev_sccont	; Modus setzen und Anzeige anpassen
	lda #$20		; unpatch
	sta patch
	rts

; ----------------------------------- 

messout	ldx #<(message)	; output message
	ldy #>(message)
	jmp gd_xtxout2
; ---
action	dec adcnt		; activity gauge
	bne ld4
	lda cntwert
	sta adcnt
	ldy offy		; bar at maximum?
	cpy clrmess+1
	bne act0
	jsr clrmess	; yes, clear
act0	ldx offx		; write bar to output
	lda filltab,x
	sta mess,y
	jsr messout
	dec offx
	bpl ld4
	inc offy
	lda #7
	sta offx
ld4	rts
; ---
tcopy	ldy #0		; set activity message text
tc0	lda txt,x
	beq clrmess
	sta message,y
	inx
	iny
	bne tc0
; 
clrmess	ldx #20		; clear message
	lda #32
cl0	sta mess,x
	dex
	bpl cl0
	ldy #0
	ldx #7
	sty offy
	stx offx
	rts
; ---
filltab	!by 160,93,103,127,126,124,105,109
message	!fill 11,32
mess	!fill 21,32
	!by 0
; ---
txt	!scr " PrShopAB  @"
	!scr " PrMaster  @"
err1	!fill 3,32
	!scr "ERROR: Not a PM/PS image."
	!fill 4,32

; ----------------------------------- Assign colors

getcols	lda #0		; %00: black
	sta col0
	lda gr_picked	; colorize (from palette), if not black
	and #$0f
	tax
	bne gc0
	ldx #1		; (white; a value of 15 would be lgrey)
gc0	lda gdcols,x	; %11: comes from PICKED 
	sta col3
	tax		; %01: same as %11
	and #$0f
	sta col1
	txa		; %10: same as %01
	and #$f0
	sta col2
	rts

; ----------------------------------- C64 Colors in GoDot Order

gdcols	!by $00,$ff,$44,$cc,$55,$aa,$11,$dd
	!by $66,$22,$99,$33,$77,$ee,$88,$bb

; ----------------------------------- Get length of file

getflen	jsr gd_sproff	; pointer off
	ldx #15		; get filename for DIR
gf0	lda ls_nambuf,x
	sta filename,x
	dex
	bpl gf0
	ldx ls_flen	; namelength plus 2
	inx
	inx
	txa
	ldx #<(dollar)	; LOAD "$:filename",drive
	ldy #>(dollar)
	jsr filnam
	lda #12
	ldx ls_drive
	ldy #0
	jsr filpar
	lda #0		; to $bd00
	tax
	ldy #$bd
	sei
	jsr load		; execute LOAD, filelength now at $bd20
	cli
	jmp gd_spron	; mouse pointer on

; ----------------------------------- 

setmodetx	ldy #20
	ldx #6
-	lda pmaster,y
	sta modetx,x
	dey
	dex
	bpl -
	rts

setpmname	ldy #6
	!by $2c
setpsname	ldy #13
	ldx #6
-	lda pmaster,y
	sta typetx,x
	dey
	dex
	bpl -
	rts

; ----------------------------------- Save Filename for Image Information

getname	ldx #0
si0	lda ls_lastname,x
	beq si1
	sta nbuf,x
	inx
	cpx #16
	bcc si0
si1	rts

; ----------------------------------- Image Information Handler

setinfo	jsr setname
	jsr setloader
	jsr setmode
	jmp setdata

setname	lda #0
	ldx #<(ls_picname)
	ldy #>(ls_picname)
	bne si3
setloader	lda #17
	ldx #<(ls_iloader)
	ldy #>(ls_iloader)
	bne si3
setmode	lda #25
	ldx #<(ls_imode)
	ldy #>(ls_imode)
	bne si3
setdata	lda #33
	ldx #<(ls_idrive)
	ldy #>(ls_idrive)
si3	stx sc_texttab
	sty sc_texttab+1
	tax
	ldy #0
si4	lda nbuf,x
	beq si5
	sta (sc_texttab),y
	inx
	iny
	bne si4
si5	rts

nbuf	!fill 16,32
	!by 0
typetx	!scr "PMaste"
which	!scr "r@"
modetx	!scr "088x052@"
datatype	!scr "Color@"

; ----------------------------------- 

pmaster	!scr "PMaster"
	!scr "PShop A"
	!scr "088x052"
dollar	!tx "$:"
filename	!fill 16,32

; ----------------------------------- 

modend	!eof
