
!src "..\godotlib.lib"
*	= $c000

; ---------------------------
;
;    ldr.IFFdither
;    Lader für IFF OCS 
;    bis zu einer Größe von 1024x768
;    unterstützt HAM, EHB und Interlace
;    erzeugt Multicolor-Dithering
;
;    0.99: 17.09.93, first release
;    1.00: 06.11.16, added Balancing and Level
;                    improved dithering tables at grey1 and grey2
;
; ---------------------------

; --------------------------- Equates

	status		= $90
	shift		= $028d
	screen		= $0400

	red		= $35
	grn		= $36
	blu		= $37
	min		= $38
	gsum		= min
	minx		= $3a
	cmg		= $3b
	lace		= $3c
	pbuf		= $3d
	rbuf		= $3e
	pcnt		= $3f
	adcnt		= $40
	nflg		= $41
	zflg		= $42
	cgflg		= $43
	gpy		= $44
	gpx		= $46
	xbuf		= $47
	ybuf		= $48
	palcnt		= $49
	smin		= $4a
	sminx		= $4c
	patty		= $4e

	name		= $b0
	dst		= name
	spalte		= $b1
	offy		= $b2
	comp		= $b3

	dst0		= $f7
	bbuf		= $f9
	lcnt8		= $fa
	lcnt		= $fb
	bcnt		= $fc
	plmask		= $fd
	hamnib		= plmask
	bytes		= $fe
;
	pal		= $3f40
	hdbuf		= $cc00
	planes		= hdbuf+8
	rbk		= hdbuf+64
	gbk		= rbk+64
	bbk		= gbk+64
	dbuf		= $cd00
	dbuf1		= dbuf+64

	p0		= $bd00
	p1		= p0+128
	p2		= p1+128
	p3		= p2+128
	p4		= p3+128
	p5		= p4+128
;
;
; --------------------------- Header

header	jmp start
	!by $80
	!by 4
	!by 1		     ; dirty
	!wo modend
	!wo 0
	!pet "AMIGA ILBM (OCS)"
	!pet "1.00"
	!pet "06.11.16"
	!pet "W.Kling/A.Dettke"

	!pet "MaxPlanes = 6   "
	!pet "MaxWidth  = 1024"
	!pet "MaxPalette= 256 "
	!pet "AutoResize= 50% "
	!pet "No AutoCenter ! "
	!pet "LookMum,NoHands!"
;
; --------------------------- Main

start	ldx #47
stt0	lda gr_rgb,x
	sta cred,x
	dex
	bpl stt0

stt1	ldx used
	bmi requ
	beq cancel
	cpx #3
	bcs cancel
;
	dec used
	jsr getname
	jsr gd_xopen
	jsr gd_clrms
	ldx #6
cl0	lda ilbm,x
	sta message,x
	dex
	bpl cl0
	lda #32
	ldx #24
cl	sta mess,x
	dex
	bpl cl

	lda #200
	sta adcnt
	lda #0
	sta offy

	jsr checkiff
	ldy #0
	tya
clbl	sta p0,y
	sta p2,y
	sta p4,y
	iny
	bne clbl
	jsr getbody

	lda which
	beq cl01
	jsr getdatac
	beq cl02
cl01	jsr getdatag

cl02	jsr cancel
err	jsr gd_xclose
	lda #$03
	sta $d015
	jsr gd_xmess
	bcc cn2

; --------------------------- Exit Loader

cancel	lda #$ff		; SE: Leave Loader
	sta used
	lda shift		; Shift (-Lock) gedrückt?
	and #1
	bne cn2		; ja, Sprung

	ldy #16		; sonst: Balancing-Tabelle initialisieren
	sty gr_ctr
	sty gr_brt
lll	dey 
	tya 
	sta gr_btab,y
	bne lll

cn2	sec 		; Leave Loader to Main Screen
	rts 
;
; ---------------------------

requ	inc used
	ldx #<(ifflst)
	ldy #>(ifflst)
	jsr gd_xmloop
	jmp stt1
;
; ---------------------------

sevcol	inc used
sevgray   inc used
	ldx used
	dex
	stx which
	ldx #1
	jsr gd_xload
	lda #3
	sta used
	sec
	rts
;
; ---------------------------

adinc	ldy offy
	dec adcnt
	lda adcnt
	and #7
	bne adskip
	lda filltab
	sta mess,y
	inc offy
	bne messout
adskip	tax
	lda filltab,x
	sta mess,y
;
messout   ldx #<(message)
	ldy #>(message)
	jmp gd_xtxout2
;
filltab   !by 160,93,103,127,126,124,105,109
;
ilbm	!scr " ILBM  "
message   !scr " ILBM  "
mess	!pet "                         "
	!by 0
;
; ---------------------------

err1	!scr "ERROR: Width must be <1024 pxls."
err2	!scr "    ERROR: Not an IFF file.     "
err3	!scr "  ERROR: No valid IFF picture.  "
err4	!scr "    ERROR: Too many colors.     "

; ---------------------------

checkiff  ldy #3
il1	jsr basin
	cmp form,y
	bne faila
	dey
	bpl il1
	jsr dum4
	ldy #7
il2	jsr basin
	cmp ilbmbmhd,y
	bne failb
	dey
	bpl il2
	jsr dum4
	sta chl
	jsr gethd
	cpx #7
	bcs faild
	lda xsize+1
	beq ghs2
	cmp #>(1024)
	beq ghs1
	bcs failc
	bcc ghs2
ghs1	lda xsize
	bne failc
ghs2	lda #<(cmap)
	ldx #>(cmap)
	jsr search
	ldx #3
	jsr dumx
	sta gpy+1
	jsr basin
	sta gpy
	ora cmgfake
	sta cmgfake
	jsr chkcols
	bcs faild
	jsr setconv
	jsr getpal
	lda #<(body)
	ldx #>(body)
	jsr search
	jsr setcmg
	jsr setvmode
	jmp dum4
;
; ---------------------------

faila	ldx #32
	!by $2c
failb	ldx #64
	!by $2c
failc	ldx #0
	!by $2c
faild	ldx #96
	ldy #0
fl0	lda err1,x
	sta message,y
	inx
	iny
	cpy #32
	bne fl0
	jsr err
	jsr gd_clrms
	jsr messout
	clc
	jmp fail3
;
; ---------------------------

chkcols   lda gpy+1
	cmp #3
	bcc ccs2
	beq ccs1
	bcs ccs2
ccs1	lda gpy
	cmp #1
ccs2	rts
;
; ---------------------------

setconv   ldx used
	beq il3
	lda #<(assigncol)
	ldy #>(assigncol)
	bne il4
il3	lda #<(makegray)
	ldy #>(makegray)
il4	sta convmode
	sty convmode+1
	rts
;
; ---------------------------

convcol   jmp (convmode)
;
convmode  !by 0,0

; ---------------------------
;
dum4	ldx #4
dumx	jsr basin
	dex
	bne dumx
	rts
;
; ---------------------------

gethd	ldx #0
hdloop	jsr basin
	sta hdbuf,x
	inx
	cpx chl
	bne hdloop
	lda hdbuf
	sta xsize+1
	lda hdbuf+1
	sta xsize
	lda hdbuf+2
	sta ysize+1
	lda hdbuf+3
	sta ysize
	lda #0
	sta lace
	sta lacefake
	sta cmg
	lda hdbuf+2
	beq nolace
	cmp #$02
	bcs lace0
	lda hdbuf+3
	cmp #$23
	bcc nolace
lace0	inc lacefake
nolace	ldx planes
	stx cmgfake
	lda pltab,x
	sta plmask
	lda xsize
	sta bytes
	lda xsize+1
	lsr
	ror bytes
	lsr
	ror bytes
	lsr
	ror bytes
	lda xsize
	and #15
	beq hds1
	inc bytes
	and #8
	bne hds1
	inc bytes
hds1	lda hdbuf+10
	sta comp
	rts
;
; ---------------------------

cmgfake   !by 0
lacefake  !by 0
;
; ---------------------------

search	sta name
	stx name+1
searchl   lda #0
	sta okflg
	sta cgflg
	ldy #3
l6	jsr basin
	cmp (name),y
	beq s1
	inc okflg
s1	cmp camg,y
	beq s11
	inc cgflg
s11	dey
	bpl l6
	lda okflg
	beq ok
	lda cgflg
	beq getcmg
	ldx #3
	jsr dumx
	sta chl+1
	jsr basin
	sta chl
	and #1
	beq l7
	inc chl
	bne l7
	inc chl+1
l7	jsr basin
	lda chl
	bne s2
	dec chl+1
s2	dec chl
	lda chl
	ora chl+1
	bne l7
	beq searchl
ok	rts
;
; ---------------------------

getcmg	jsr dum4
	ldx #3
	stx cmg
	jsr dumx
	and #$08
	cmp #$08
	bne gcs1
	lda #54
	sta cmg
gcs1	jsr basin
	tax
	and #4
	sta lace
	txa
	and #$80
	cmp #$80
	bne gcs2
	lda #102
	sta cmg
gcs2	jmp searchl
;
; ---------------------------

getpal	ldx #0
gpl4	ldy gpy
	jsr basin
	lsr
	lsr
	lsr
	lsr
	jsr balancing
	sta red
	sta rbk,x
	dey
	beq palq
	jsr basin
	lsr
	lsr
	lsr
	lsr
	jsr balancing
	sta grn
	sta gbk,x
	dey
	beq palq
	jsr basin
	lsr
	lsr
	lsr
	lsr
	jsr balancing
	sta blu
	sta bbk,x
	sty gpy
	stx gpx
	cpx #64
	bcs fedup
	jsr convcol
	ldx gpx
	sta pal,x
	tya 
	sta pal+64,x
	lda patty
	sta screen,x
fedup	inx
	dec gpy
	bne gpl4
	dec gpy+1
	bpl gpl4
palq	rts
;
; ---------------------------

balancing	stx gpx
	tax
	lda gr_btab,x
	ldx gpx
	rts

; ---------------------------

assigncol lda red
	clc
	adc grn
	adc blu
	tax
	lda avr,x
	ldy #0
	cmp red
	bne as0
	iny
as0	cmp grn
	bne as1
	iny
as1	cmp blu
	bne as2
	iny
as2	cpy #2
	bcc cl51
	tax
	lda pats,x
	sta patty
	lda gray2,x
	tay
	lda cpref,y
	tay
	lda dnib,y
	tay
	lda gray1,x
	tax
	lda cpref,x
	tax
	lda dnib,x
	rts
;
cl51	ldx level		; Level
cl6	lda #0
	sta dbuf1,x
	sta nflg
	sta zflg
	lda cred,x
	sec
	sbc red
	bne rd0
	inc zflg
rd0	bcs rpos
	eor #$ff
	adc #1
	inc nflg
rpos	tay
	lda quad,y
	sta dbuf,x
	lda cgrn,x
	sec
	sbc grn
	bne gn0
	inc zflg
gn0	bcs gpos
	eor #$ff
	adc #1
	inc nflg
gpos	tay
	lda quad,y
	clc
	adc dbuf,x
	sta dbuf,x
	bcc gsk
	inc dbuf1,x
gsk	lda cblu,x
	sec
	sbc blu
	bne bl0
	inc zflg
bl0	bcs bpos
	eor #$ff
	adc #1
	inc nflg
bpos	tay
	lda nflg
	beq nopf
	clc
	adc zflg
	cmp #3
	beq nopf
	lda #2
	!by $2c
nopf	lda #0
	clc
	adc quad,y
	adc dbuf,x
	sta dbuf,x
	bcc bsk
	inc dbuf1,x
bsk	inx
	cpx #16
	bne cl6
;
	stx min+1
	ldx level		; level
ml1	lda dbuf1,x
	tay
	cmp min+1
	beq ms1
	bcs ms2
	bcc ms3
ms1	lda dbuf,x
	cmp min
	beq ms4
	bcs ms2
ms3	lda dbuf,x
ms4	sty min+1
	sta min
	stx minx
ms2	inx
	cpx #16
	bne ml1

	lda min+1
	sta smin+1
	lda min
	sta smin
	ldy minx
	sty sminx
	lda #$ff		; level-1!
	sta dbuf1,y
	stx min+1
	ldx level		; level
ms23	lda dbuf1,x
	tay
	cmp min+1
	beq ms20
	bcs ms21
	bcc ms22
ms20	lda dbuf,x
	cmp min
	beq ms24
	bcs ms21
ms22	lda dbuf,x
ms24	sty min+1
	sta min
	stx minx
ms21	inx
	cpx #16
	bne ms23
	lda smin
	ora smin+1
	beq ms27
	lda smin
	clc
	adc min
	sta sminx+1
	lda smin+1
	adc min+1
	sta patty
	ldx #4
ms25	asl min
	rol min+1
	dex
	bne ms25
	ldx #0
ms26	lda min
	sec
	sbc sminx+1
	sta min
	lda min+1
	sbc patty
	bmi ms27
	sta min+1
	inx
	bne ms26
ms27	stx patty
	lda sminx
	tax
	lda cpref,x
	tax
	lda dnib,x
	tay
	lda minx
	tax
	lda cpref,x
	tax
	lda dnib,x
	rts
;
; ---------------------------

avr	!by 0,0,1,1,1,2,2,2
	!by 3,3,3,4,4,4,5,5,5
	!by 6,6,6,7,7,7,8,8,8
	!by 9,9,9,10,10,10
	!by 11,11,11,12,12,12
	!by 13,13,13,14,14,14
	!by 15,15
;
; ---------------------------

quad	!by 0,1,4,9,16,25,36,49,64,81,100,121,144,169,196,225
;
; ---------------------------

cred	!by 11,7,3,0,15
	!by 06,15,13,12,10,08
	!by 00,00,00,10,14

cgrn	!by 11,7,3,0,15
	!by 04,07,08,04,15,00
	!by 08,00,12,15,14

cblu	!by 11,7,3,0,15
	!by 00,07,05,12,14,00
	!by 15,10,05,06,07

cpref	!by 11,7,3,0,15
	!by 2,9,6,5,12,4
	!by 8,1,10,14,13

gray1	!by 3,3,3,2,2,2,2,1,1,1,1,0,0,0,0,4,4
gray2	!by 2,2,2,2,1,1,1,1,0,0,0,0,4,4,4,4,4

pats	!by $00,$04,$07,$0b,$00,$04,$07,$0b
	!by $00,$04,$07,$0b,$00,$05,$0a,$10 

; ---------------------------

setcmg	lda cmg
	bne scs0
	lda cmgfake
	sta cmg
	lda lacefake
	sta lace
scs0	lda cmg
	cmp #102
	bne scs1
	ldx #31
	ldy used
	beq scl2

scl1	lda rbk,x
	lsr
	sta red
	lda gbk,x
	lsr
	sta grn
	lda bbk,x
	lsr
	sta blu
	stx gpx
	jsr convcol
	ldx gpx
	sta pal+32,x
	tya 
	sta pal+96,x
	lda rbuf
	sta screen+32,x
	dex 
	bpl scl1
scs1	rts 

scl2	lda pal+64,x
	and #15
	lsr 
	tay 
	lda dnib,y
	sta pal+96,x
	dey 
	bpl scl3
	iny 
scl3	lda dnib,y
	sta pal+32,x
	lda screen,x
	sta screen+32,x
	dex 
	bpl scl2
	rts 

setvmode  ldx planes
	dex
	lda cmg
	cmp #54
	bne svms1
	ldx #7
svms1	cmp #102
	bne svms2
	inx
svms2	txa
	asl
	asl
	tax
	ldy #3
svml	lda vmodes,x
	sta viewmode+3,y
	inx
	dey
	bpl svml
	sty palcnt
	lda ysize
	bne nopal
	lda ysize+1
	cmp #3
	bcs nopal
	lda #4
	sta palcnt
nopal	rts
;
vmodes	!pet "  2   4   8  61  23  46 bhe mah "
;
; ---------------------------

readline  lda #<(p0)
	ldx #>(p0)
	sta pbuf
	stx pbuf+1
	sta red
	sta grn
	sta blu
	lda planes
	sta pcnt
nline	ldy #0
	lda comp
	beq uncomp
next	jsr basin
	tax
	bmi decomp
rll	jsr basin
	sta (pbuf),y
	iny
	dex
	bpl rll
	bmi rls
decomp	dex
	jsr basin
rll1	sta (pbuf),y
	iny
	inx
	bne rll1
rls	cpy bytes
	bcc next
	bcs rls1
;
; ---------------------------

uncomp	jsr basin
	bcs fail2
	sta (pbuf),y
	iny
	cpy bytes
	bcc uncomp
rls1	lda pbuf
	clc
	adc #128
	sta pbuf
	bcc rls2
	inc pbuf+1
rls2	dec pcnt
	bne nline
	lda xsize+1
	lsr
	bne squeeze
	rts
;
; ---------------------------

fail2	pla
	pla
fail3	pla
	pla
	inc used
	rts
;
; ---------------------------

squeeze   lda #<(p0)
	ldx #>(p0)
	sta pbuf
	stx pbuf+1
	lda planes
	sta pcnt
sql0	ldx #0
	ldy #0
sql1	lda (pbuf),y
	asl
	rol bbuf
	asl
	asl
	rol bbuf
	asl
	asl
	rol bbuf
	asl
	asl
	rol bbuf
	asl
	sta (pbuf),y
	iny
	lda (pbuf),y
	asl
	rol bbuf
	asl
	asl
	rol bbuf
	asl
	asl
	rol bbuf
	asl
	asl
	rol bbuf
	asl
	sta (pbuf),y
	sty ybuf
	txa
	tay
	lda bbuf
	sta (pbuf),y
	inx
	ldy ybuf
	iny
	cpy bytes
	bne sql1
	lda pbuf
	clc
	adc #128
	sta pbuf
	bcc sqs1
	inc pbuf+1
sqs1	dec pcnt
	bne sql0
	rts
;
; ---------------------------

pltab	!by 0,1,3,7,15,31,63
;
dnib	!by $00,$11,$22,$33
	!by $44,$55,$66,$77
	!by $88,$99,$aa,$bb
	!by $cc,$dd,$ee,$ff,$bb
;
; ---------------------------

makegray	ldy red
	lda rtab,y
	clc 
	ldy grn
	adc gtab,y
	ldy blu
	adc btab,y
	tay 
	and #$0f
	sta rbuf
	tya 
	lsr 
	lsr 
	lsr 
	lsr 
	tax 
	lda dnib,x
	inx 
	ldy dnib,x
	rts 

; ---------------------------

getbody   lda cmg
	cmp #54
	bne noham3
	jmp getham

noham3	lda #<($4000)
	ldx #>($4000)
	sta dst0
	sta dst
	stx dst0+1
	stx dst+1

	lda #25
	sta lcnt8

lnloop8   lda #7
	sta lcnt

lnloop	jsr adinc
	jsr readline
	ldx lace
	beq lcs0
	jsr readline
lcs0	dec palcnt
	bne lcs01
	lda #4
	sta palcnt
	jsr readline
	ldx lace
	beq lcs01
	jsr readline
lcs01	ldx #0
byloop	lda #3
	sta bcnt
btloop	asl p5,x
	rol
	asl p4,x
	rol
	asl p3,x
	rol
	asl p2,x
	rol
	asl p1,x
	rol
	asl p0,x
	rol
	and plmask
	jsr raster
	and #$f0
	sta bbuf
	asl p5,x
	rol
	asl p4,x
	rol
	asl p3,x
	rol
	asl p2,x
	rol
	asl p1,x
	rol
	asl p0,x
	rol
	and plmask
	jsr raster
	and #$0f
	ora bbuf
	ldy #0
	sta (dst),y
	inc dst
	bne s3
	inc dst+1
s3	dec bcnt
	bpl btloop
	lda dst
	clc
	adc #28
	sta dst
	bcc s4
	inc dst+1
s4	inx
	cpx #40
	bne byloop
	lda dst0
	clc
	adc #4
	sta dst0
	sta dst
	bcc s5
	inc dst0+1
s5	lda dst0+1
	sta dst+1
	dec lcnt
	bmi rdy
	jmp lnloop
rdy	lda dst0
	clc
	adc #<(1248)
	sta dst0
	sta dst
	lda dst0+1
	adc #>(1248)
	sta dst0+1
	sta dst+1
	dec lcnt8
	beq rdy1
	jmp lnloop8
rdy1	rts
;
raster 	sta ybuf
	lda lcnt
	asl 
	asl 
	and #15
	ora bcnt
	tay 
	lda cltab,y
	ldy ybuf
	cmp screen,y
	beq s6
	bcc s6
	lda pal,y
	rts 
s6	lda pal+64,y
	rts 

; ---------------------------

cltab 	!by $10,$08,$0e,$06
	!by $04,$0c,$02,$0a
	!by $0d,$05,$0f,$07
	!by $01,$09,$03,$0b

rtab 	!by $00,$05,$0a,$0f,$13,$18,$1d,$22
	!by $26,$2b,$30,$35,$3a,$3e,$43,$48
gtab 	!by $00,$09,$13,$1c,$26,$2f,$39,$42
	!by $4c,$55,$5e,$68,$71,$7b,$84,$8e
btab 	!by $00,$02,$03,$05,$07,$09,$0a,$0c
	!by $0e,$10,$12,$13,$15,$17,$19,$1a 

; ---------------------------

getham	lda #<($4000)
	ldx #>($4000)
	sta dst0
	sta dst
	stx dst0+1
	stx dst+1
	lda #25
	sta lcnt8
hlnloop8  lda #7
	sta lcnt
hlnloop   jsr adinc
	jsr readline
	ldx lace
	beq lcs1
	jsr readline
lcs1	dec palcnt
	bne lcs11
	lda #4
	sta palcnt
	jsr readline
	lda lace
	beq lcs11
	jsr readline
lcs11	ldx #0
hbyloop   lda #3
	sta bcnt
hbtloop   asl p3,x
	rol
	asl p2,x
	rol
	asl p1,x
	rol
	asl p0,x
	rol
	and #$0f
	tay
	asl p5,x
	rol
	asl p4,x
	rol
	and #3
	beq pure
	stx xbuf

	eor #$02
	cmp #$03
	bne hs1
	and #$02
hs1	tax
	sty red,x
	jsr convcol
	sta pal+16
	sty pal+80
	lda rbuf
	sta screen+16
	ldx xbuf
	lda #$10
	bpl pr1

pure	lda rbk,y
	sta red
	lda gbk,y
	sta grn
	lda bbk,y
	sta blu
pr1	jsr raster
;
hok	and #$f0
	sta bbuf
	asl p3,x
	rol
	asl p2,x
	rol
	asl p1,x
	rol
	asl p0,x
	rol
	and #$0f
	tay
	asl p5,x
	rol
	asl p4,x
	rol
	and #3
	beq pure1
	stx xbuf
	eor #$02
	cmp #$03
	bne hs2
	and #$02
hs2	tax
	sty red,x
	jsr convcol
	sta pal+16
	sty pal+80
	lda rbuf
	sta screen+16
	ldx xbuf
	lda #$10
	bpl pr2
pure1	lda rbk,y
	sta red
	lda gbk,y
	sta grn
	lda bbk,y
	sta blu
pr2	jsr raster
;
hok1	and #$0f
	ora bbuf
	ldy #0
	sta (dst),y
	inc dst
	bne hs3
	inc dst+1
hs3	dec bcnt
	bmi hs31
	jmp hbtloop
hs31	lda dst
	clc
	adc #28
	sta dst
	bcc hs4
	inc dst+1
hs4	inx
	cpx #40
	beq hs41
	jmp hbyloop
hs41	lda dst0
	clc
	adc #4
	sta dst0
	sta dst
	bcc hs5
	inc dst0+1
hs5	lda dst0+1
	sta dst+1
	dec lcnt
	bmi hrdy
	jmp hlnloop
hrdy	lda dst0
	clc
	adc #<(1248)
	sta dst0
	sta dst
	lda dst0+1
	adc #>(1248)
	sta dst0+1
	sta dst+1
	dec lcnt8
	beq hrdy1
	jmp hlnloop8
hrdy1	rts
;
; ---------------------------

form	!pet "mrof"
ilbmbmhd  !pet "dhmbmbli"
cmap	!pet "pamc"
camg	!pet "gmac"
body	!pet "ydob"
xsize	!by 0,0
ysize	!by 0,0
okflg	!by 0
chl	!by 0,0
;
used	!by $ff
which	!by 0
level	!by 3
lvlnum	!pet "012345"
;
; ---------------------------

ifflst	!by 0
	!by 4,11,18,16,$81,0,0
	!scr "Load IFF dith@"
	!by 9,11,18,3,$ca,<(sevgray),>(sevgray)
	!scr "Gray Scale@"
	!by 12,11,11,3,$c8,<(sevcol),>(sevcol)
	!scr "Color@"
lvlgad	!by 12,22,7,3,$cf,<(sevlvl),>(sevlvl)
	!scr "Lvl "
lvltx	!by $33,0
	!by 15,11,18,3,$ca,<(cn2),>(cn2)
	!scr "Cancel Load@"
	!by $c0,6,14,10
	!scr "Convert to@" 
	!by $80
;
; ---------------------------

sevlvl	lda spalte
	cmp #25
	bcs lvlinc
lvldec	dec level
	bpl lvl0
	lda #4
	sta level
lvlinc	inc level
lvl0	ldx level
	cpx #6
	bcc lvl1
	ldx #0
	stx level
lvl1	lda lvlnum,x
	sta lvltx
	jsr gettab
	ldy #6
	jmp gd_xtxout1
;
; ---------------------------

gettab	lda #<(lvlgad)
	sta sc_screentab
	lda #>(lvlgad)
	sta sc_screentab+1
	lda #0
	tax
	tay
gt0	jsr gd_setpos
	cpx #3
	bne gt0
	stx sc_ho
	jsr gd_trim
	jmp gd_initmove
;
; ---------------------------

getname   ldx #0
si0	lda ls_lastname,x
	beq si1
	sta nbuf,x
	inx
	cpx #16
	bcc si0
si1	rts
;
getdatac  ldx #4
	!by $2c
getdatag  ldx #9
	ldy #4
sinfo0	lda dtextc,x
	sta datatype,y
	dex
	dey
	bpl sinfo0
	jsr setname
	jsr setloader
	jsr setmode
	jmp setdata
;
setname   lda #0
	ldx #<(ls_picname)
	ldy #>(ls_picname)
	bne si3
setloader lda #17
	ldx #<(ls_iloader)
	ldy #>(ls_iloader)
	bne si3
setmode   lda #25
	ldx #<(ls_imode)
	ldy #>(ls_imode)
	bne si3
setdata   lda #33
	ldx #<(ls_idrive)
	ldy #>(ls_idrive)
si3	stx sc_texttab
	sty sc_texttab+1
	tax
	ldy #0
si4	lda nbuf,x
	beq si5
	sta (sc_texttab),y
	inx
	iny
	bne si4
si5	rts
;
nbuf	!fill 16,32
	!by 0
viewmode  !scr "IFF    @"
modetx	!scr "160x200@"
datatype  !scr "Color@"

dtextc	!scr "Color"
dtextg	!scr "Gray "
modend	!eof

